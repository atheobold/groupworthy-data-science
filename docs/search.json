[
  {
    "objectID": "weeks/week-4-tidy-data.html",
    "href": "weeks/week-4-tidy-data.html",
    "title": "Tidy Data",
    "section": "",
    "text": "Data can be formatted in what are often referred to as wide format or long format. Wide format data has variables spread across columns and typically uses less space to display. This format is how you would typically choose to present your data as there is far less repetition of labels and row elements. Long format data is going to have each variable in a column and each observation in a row; this is likely not the most compact form of the data.\nLong formatted data is often what we call tidy data - a specific format of data in which each variable is a column, each observation is a row and each type of observational unit forms a table (or in R, a data frame).\n\n\nCan you determine which of the following data sets follows the tidy data format?\n\nOption 1:Option 2:Option 3:Solution\n\n\n\n\n\nName\nTreatment A\nTreatment B\n\n\n\n\nBrian Boatwright\nNA\n18\n\n\nTrenna Porras\n4\n1\n\n\nHannaa Kumar\n6\n7\n\n\n\n\n\n\n\n\nTreatment\nBrian Boatwright\nTrenna Porras\nHannaa Kumar\n\n\n\n\nA\nNA\n4\n6\n\n\nB\n18\n1\n7\n\n\n\n\n\n\n\n\nName\nTreatment\nMeasurement\n\n\n\n\nBrian Boatwright\nA\nNA\n\n\nTrenna Porras\nA\n4\n\n\nHannaa Kumar\nA\n6\n\n\nBrian Boatwright\nB\n18\n\n\nTrenna Porras\nB\n1\n\n\nHannaa Kumar\nB\n7\n\n\n\n\n\nOption 3 follows the tidy data format since each variable (Name, Treatment, and Measurement) belong to their own columns and each observation taken is identified by a single row.\n\n\n\n\nData frames are a specific object type in R, data.frame(), and can be indexed the same as matrices. It may be useful to actually look at your data before beginning to work with it to see the format of the data. The following functions in R help us learn information about our data sets:\n\nclass(): outputs the object type\nnames(): outputs the variable (column) names\nhead(): outputs the first 6 rows of a dataframe\nglimpse() or str(): output a transpose of dataframe or matrix; shows the data types\nsummary() outputs 6-number summaries or frequencies for all variables in the data set depending on the variables data type\ndata$variable: extracts a specific variable (column) from the data set\n\nYou may also choose to click on the data set name in your Environment window pane in R and the data set will pop up in a new tab in the script pane.\n\n\nWorking with data sets in R\n\nThe cars data set is a default data set that lives in R (for examples like this!).\n\n# outputs the class of the cars data set (data.frame)\nclass(cars)\n\n[1] \"data.frame\"\n\n# outputs the names of the variables included in the cars data set (speed, dist)\nnames(cars)\n\n[1] \"speed\" \"dist\" \n\n# outputs the first six rows of the cars data set\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\n# outputs\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n# outputs the second row of the cars data set\ncars[2,]\n\n  speed dist\n2     4   10\n\n# outputs the first column of the cars data set as a vector\ncars[,1]\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n# outputs the speed variable of the cars data set as a vector (notice this is the same as above)\ncars$speed\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n\n:::\n\nIn a perfect world, all data would come in the right format for our needs, but this is often not the case. We will spend the next few weeks learning about how to use R to reformat our data to follow the tidy data framework and see why this is so important. For now, we will work with nice clean data sets but you should be able to identify when data follows a tidy data format and when it does not.\n\n\nThe concept of tidy data is useful for mapping variables from the data set to elements in a graph, specifications of a model, or aggregating to create summaries. However, what is considered to be “tidy data” format for one task, might not be in the correct “tidy data” format for a different task. It is important for you to consider the end goal when restructuring your data.\nPart of this course is building the skills for you to be able to map your data operation steps from an original data set to the correct format (and output)."
  },
  {
    "objectID": "weeks/week-4-tidy-data.html#tidy-data",
    "href": "weeks/week-4-tidy-data.html#tidy-data",
    "title": "Tidy Data",
    "section": "",
    "text": "Data can be formatted in what are often referred to as wide format or long format. Wide format data has variables spread across columns and typically uses less space to display. This format is how you would typically choose to present your data as there is far less repetition of labels and row elements. Long format data is going to have each variable in a column and each observation in a row; this is likely not the most compact form of the data.\nLong formatted data is often what we call tidy data - a specific format of data in which each variable is a column, each observation is a row and each type of observational unit forms a table (or in R, a data frame).\n\n\nCan you determine which of the following data sets follows the tidy data format?\n\nOption 1:Option 2:Option 3:Solution\n\n\n\n\n\nName\nTreatment A\nTreatment B\n\n\n\n\nBrian Boatwright\nNA\n18\n\n\nTrenna Porras\n4\n1\n\n\nHannaa Kumar\n6\n7\n\n\n\n\n\n\n\n\nTreatment\nBrian Boatwright\nTrenna Porras\nHannaa Kumar\n\n\n\n\nA\nNA\n4\n6\n\n\nB\n18\n1\n7\n\n\n\n\n\n\n\n\nName\nTreatment\nMeasurement\n\n\n\n\nBrian Boatwright\nA\nNA\n\n\nTrenna Porras\nA\n4\n\n\nHannaa Kumar\nA\n6\n\n\nBrian Boatwright\nB\n18\n\n\nTrenna Porras\nB\n1\n\n\nHannaa Kumar\nB\n7\n\n\n\n\n\nOption 3 follows the tidy data format since each variable (Name, Treatment, and Measurement) belong to their own columns and each observation taken is identified by a single row.\n\n\n\n\nData frames are a specific object type in R, data.frame(), and can be indexed the same as matrices. It may be useful to actually look at your data before beginning to work with it to see the format of the data. The following functions in R help us learn information about our data sets:\n\nclass(): outputs the object type\nnames(): outputs the variable (column) names\nhead(): outputs the first 6 rows of a dataframe\nglimpse() or str(): output a transpose of dataframe or matrix; shows the data types\nsummary() outputs 6-number summaries or frequencies for all variables in the data set depending on the variables data type\ndata$variable: extracts a specific variable (column) from the data set\n\nYou may also choose to click on the data set name in your Environment window pane in R and the data set will pop up in a new tab in the script pane.\n\n\nWorking with data sets in R\n\nThe cars data set is a default data set that lives in R (for examples like this!).\n\n# outputs the class of the cars data set (data.frame)\nclass(cars)\n\n[1] \"data.frame\"\n\n# outputs the names of the variables included in the cars data set (speed, dist)\nnames(cars)\n\n[1] \"speed\" \"dist\" \n\n# outputs the first six rows of the cars data set\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\n# outputs\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n# outputs the second row of the cars data set\ncars[2,]\n\n  speed dist\n2     4   10\n\n# outputs the first column of the cars data set as a vector\ncars[,1]\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n# outputs the speed variable of the cars data set as a vector (notice this is the same as above)\ncars$speed\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n\n:::\n\nIn a perfect world, all data would come in the right format for our needs, but this is often not the case. We will spend the next few weeks learning about how to use R to reformat our data to follow the tidy data framework and see why this is so important. For now, we will work with nice clean data sets but you should be able to identify when data follows a tidy data format and when it does not.\n\n\nThe concept of tidy data is useful for mapping variables from the data set to elements in a graph, specifications of a model, or aggregating to create summaries. However, what is considered to be “tidy data” format for one task, might not be in the correct “tidy data” format for a different task. It is important for you to consider the end goal when restructuring your data.\nPart of this course is building the skills for you to be able to map your data operation steps from an original data set to the correct format (and output)."
  },
  {
    "objectID": "weeks/week-2-ggplot.html",
    "href": "weeks/week-2-ggplot.html",
    "title": "Introduction to ggplot",
    "section": "",
    "text": "The greatest possibilities of visual display lie in vividness and inescapability of the intended message. A visual display can stop your mental flow in its tracks and make you think. A visual display can force you to notice what you never expected to see. (“Why, that scatter diagram has a hole in the middle!”) – John Tukey, Data Based Graphics: Visual Display in the Decades to Come",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#learning-objectives",
    "href": "weeks/week-2-ggplot.html#learning-objectives",
    "title": "Introduction to ggplot",
    "section": "0.1 Learning Objectives",
    "text": "0.1 Learning Objectives\n\nDescribe charts using the grammar of graphics\nCreate layered graphics that highlight multiple aspects of the data\nEvaluate existing charts and develop new versions that improve accessibility and readability",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#loading-in-the-ggplot2-package",
    "href": "weeks/week-2-ggplot.html#loading-in-the-ggplot2-package",
    "title": "Introduction to ggplot",
    "section": "0.2 Loading in the ggplot2 Package",
    "text": "0.2 Loading in the ggplot2 Package\nIn this class, we’re going to use the ggplot2 package to create graphics in R. This package is already installed as part of the tidyverse, but can be installed:\n\ninstall.packages(\"ggplot2\")\n\nand/or loaded:\n\nlibrary(\"ggplot2\")\n\n# alternatively\nlibrary(\"tidyverse\") # (my preference!)\n\n\n\n\n\n\nBuilding a masterpiece, by Allison Horst",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#the-grammar-of-graphics",
    "href": "weeks/week-2-ggplot.html#the-grammar-of-graphics",
    "title": "Introduction to ggplot",
    "section": "1.1 The Grammar of Graphics",
    "text": "1.1 The Grammar of Graphics\nThe grammar of graphics is an approach first introduced in Leland Wilkinson’s book (Wilkinson 2005). Unlike other graphics classification schemes, the grammar of graphics makes an attempt to describe how the data set itself relates to the components of the chart.\nThis has a few advantages:\n\nIt’s relatively easy to represent the same data set with different types of plots (and to find their strengths and weaknesses)\nGrammar leads to a concise description of the plot and its contents\nWe can add layers to modify the graphics, each with their own basic grammar (just like we combine sentences and clauses to build a rich, descriptive paragraph)\n\n\n\n\nA pyramid view of the major components of the grammar of graphics, with data as the base, aesthetics building on data, scales building on aesthetics, geometric objects, statistics, facets, and the coordinate system at the top of the pyramid. Source: (Sarkar 2018)",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#making-your-first-ggplot",
    "href": "weeks/week-2-ggplot.html#making-your-first-ggplot",
    "title": "Introduction to ggplot",
    "section": "1.2 Making Your First ggplot",
    "text": "1.2 Making Your First ggplot\n▶️ Required Video: ggplot2 First Steps (4 minutes)\n💻 Required Tutorials\n\nBar Charts\nHistograms\nScatterplots\nLine Plots\n\n\n✅ Check-in 2.1\nQuestion 1 – With the mpg dataset (included in the ggplot2 package), make a scatterplot of hwy versus cty. Which of these correctly describe the relationship seen in the plot?\n\npositive\nstrong\nnegative\nweak\nlinear\nnon-linear\n\nQuestion 2 – What specifically does the code ggplot(data = mpg) do?\n\nCreates a blank plot\nMakes a scatterplot of the first two variables in the mpg dataset\nCreates a ggplot with the mpg dataset",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#aesthetics",
    "href": "weeks/week-2-ggplot.html#aesthetics",
    "title": "Introduction to ggplot",
    "section": "1.3 Aesthetics",
    "text": "1.3 Aesthetics\n▶️ Required Video: What is an aesthetic? (7 minutes)\n\n✅ Check-in 2.1\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy), color = \"blue\")\n\nQuestion 3: What aesthetics does this plot contain?\n\nx\ny\ncolor\ndata\n\nQuestion 4: Which of following changes would color the points based on the number of cylinders (cyl) the car has (4, 5, 6, 8)? Select all that apply.\n\n## Option A\nggplot(data = mpg) +\ngeom_point(\n  mapping = aes(x = displ, \n                y = hwy, \n                color = cyl)\n  )\n\n## Option B\nggplot(data = mpg) +\ngeom_point(\n  mapping = aes(x = displ, \n                y = hwy), \n  color = cyl\n  )\n\n## Option C\nggplot(data = mpg, \n       mapping = aes(color = cyl)\n       ) +\ngeom_point(\n  mapping = aes(x = displ, \n                y = hwy)\n  )",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#geoms",
    "href": "weeks/week-2-ggplot.html#geoms",
    "title": "Introduction to ggplot",
    "section": "1.4 geoms",
    "text": "1.4 geoms\n▶️ Required Video: What is a geometric object?\n\nWhat type of chart to use?\nIt can be hard to know what type of chart to use for a particular type of data. I recommend figuring out what you want to show first, and then thinking about how to show that data with an appropriate plot type. Consider the following factors:\n\nWhat type of variable is x? Categorical? Continuous? Discrete?\nWhat type of variable is y?\nHow many observations do I have for each x / y variable?\nAre there any important moderating variables?\nDo I have data that might be best shown in small multiples? E.g. a categorical moderating variable and a lot of data, where the categorical variable might be important for showing different features of the data?\n\nOnce you’ve thought through this, take a look through catalogs like the R Graph Gallery to see what visualizations match your data and use-case.\n\n\n✅ Check-in 2.1\nQuestion 4: Match each plot with the geom_XXX() function used to create it!\n\n\n\nLine Chart\nBoxplot\nHistogram\nArea Chart\n\n\n\ngeom_boxplot()\ngeom_point()\ngeom_area()\ngeom_line()\ngeom_histogram()",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#getting-a-bit-fancier",
    "href": "weeks/week-2-ggplot.html#getting-a-bit-fancier",
    "title": "Introduction to ggplot",
    "section": "1.5 Getting a Bit Fancier",
    "text": "1.5 Getting a Bit Fancier\nIn this section we dig a bit deeper into how we can make our code more efficient and other ways we can add additional variables to our plots.\n\nGlobal vs. local aesthetics\n▶️ Required Video: Global vs. local aesthetics (4 minutes)\n\n\n✅ Check-in 2.1\nQuestion 5: Match the code to the type of aesthetics that are being used:\n\n\n\nGlobal\n \nLocal\n\n\nggplot(data = mpg, \n       mapping = aes(x = mpg, y = hwy)\n       ) + \n  geom_point()\n\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = mpg, y = hwy))",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#facets",
    "href": "weeks/week-2-ggplot.html#facets",
    "title": "Introduction to ggplot",
    "section": "1.6 Facets",
    "text": "1.6 Facets\n▶️ Required Video: Adding a third variable with facets",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#data-transformations",
    "href": "weeks/week-2-ggplot.html#data-transformations",
    "title": "Introduction to ggplot",
    "section": "1.7 Data transformations",
    "text": "1.7 Data transformations\n▶️ Required Video: What is being plotted? (6 minutes)\n\n✅ Check-in 2.1\nQuestion 6: Match the stat function with its associated geom function.\n\n\n\nstat_count()\nstat_identity()\n\n\n\ngeom_bar()\ngeom_col()",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#changing-the-positions-of-bars",
    "href": "weeks/week-2-ggplot.html#changing-the-positions-of-bars",
    "title": "Introduction to ggplot",
    "section": "1.8 Changing the positions of bars",
    "text": "1.8 Changing the positions of bars\n▶️ Required Video: How do I change positions?\n\n✅ Check-in 2.1\nQuestion 7: What arguments for geom_jitter() control the amount of jittering?\n\nwidth\nheight\nstat\nposition\nna.rm\nshow.legend\ndata\nmapping",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-2-ggplot.html#plot-customizations",
    "href": "weeks/week-2-ggplot.html#plot-customizations",
    "title": "Introduction to ggplot",
    "section": "1.9 Plot Customizations",
    "text": "1.9 Plot Customizations\n📖 Required Reading: Communication\n\n\n✅ Check-in 2.1\nQuestion 8: What can the labs() function do? Select all that apply.\n\nCustomize the x-axis label\nCustomize the y-axis label\nCustomize the legend label\nCustomize the plot title\nAdd a caption to the plot",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-1-r-rstudio.html",
    "href": "weeks/week-1-r-rstudio.html",
    "title": "Week 1, Part 1: R & RStudio",
    "section": "",
    "text": "For the first portion of this week’s coursework, we are going to learn about / refresh our memory on R and RStudio. This course is all about you learning skills for working with data in R, so you will need to have local installations of both R and RStudio on your computer.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-1-r-rstudio.html#updating-your-version-of-r",
    "href": "weeks/week-1-r-rstudio.html#updating-your-version-of-r",
    "title": "Week 1, Part 1: R & RStudio",
    "section": "1.1 Updating Your Version of R",
    "text": "1.1 Updating Your Version of R\nIf you already have R downloaded, you need to confirm that you have the most up to date version of R. Do not ignore these instructions. If you neglect to update your version of R, you may find that updating a package will make it so your code will not run.\n\nStep 1: Open RStudio\nStep 2: At the top of the the Console it will say what version of R you are using\n\n{fig-alt = “A screenshot of what version of R should appear when you open RStudio. The version reads ‘R version 4.4.1 (2024-06-14) – ’Race for Your Life’.”}\nIf the version is not 4.4.1 (like the image above), you need to update your version of R! The simplest way to do this is to follow the instructions below to install R.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-1-r-rstudio.html#installing-r",
    "href": "weeks/week-1-r-rstudio.html#installing-r",
    "title": "Week 1, Part 1: R & RStudio",
    "section": "1.2 Installing R",
    "text": "1.2 Installing R\nDownload and install R by going to https://cloud.r-project.org/. Here, you will find three options for installing R—click on the option for your computer’s operating system.\n\n\n\n\nIf you are a Windows user:\n\nClick on “Download R for Windows”\nClick on “base”\nClick on the Download link.\nWhen you open the execution file (.exe) you will be prompted with a variety of questions about installing R. Feel free to use the default features / settings that come with R (continue to click “Ok” until the download starts).\n\n\n\n\n\n\n\nMultiple Versions of R\n\n\n\nBeware that if you had a previous version of R downloaded on your PC, that old version will not be deleted when you download the most recent version of R. We do not want to have two versions of R installed, as your computer can get confused what version of R to use. So, you need to remove the old version of R.\nTo do this you need to:\n\nNavigate to your computer’s settings\nClick on the “Apps” option on the left-hand panel\nSearch for or scroll down to R\nFind the older version of R\n\n\n\nClick on the ... on the right side\nSelect “Uninstall”\n\n\n\n\n\n\nIf you are macOS user:\n\nClick on “Download R for (Mac) OS X”\nUnder “Latest release:” click on R-X.X.X.pkg, where R-X.X.X is the version number. For example, the latest version of R as of July 1, 2024 was R-4.4.1 (Race for Your Life).\nWhen installing, use the default features / settings that come with R (click Ok until the download starts).\n\n\n\n\n\n\n\nTroubleshooting for Macs\n\n\n\nFirst, identify which version of OSx you are running. How-to\nNext, find out which version of R your computer can run. Link\nIf this version is 3.6 or later, download the latest version that your computer can handle.\nIf this version is 3.4 or earlier, you’re going to run in to some trouble. I recommend updating your version of OSx, if you are willing. If you can’t, then you can use Posit Cloud to run R and RStudio on a free server. However, I recommend strongly against this option; your files will not be saved indefinitely, you will have limited hours to complete your work, your computing power will be limited, and you will need an internet connection at all times to do your work.\n\n\n\n\nIf you are a Linux user:\nClick on “Download R for Linux” and choose your distribution for more information on installing R for your setup.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-1-r-rstudio.html#updating-your-version-of-rstudio",
    "href": "weeks/week-1-r-rstudio.html#updating-your-version-of-rstudio",
    "title": "Week 1, Part 1: R & RStudio",
    "section": "2.1 Updating Your Version of RStudio",
    "text": "2.1 Updating Your Version of RStudio\nIf you already have RStudio, you need to double check if you have the most recent version. You will not have access to the newest features for Quarto documents unless you have the most recent version of RStudio.\n\nStep 1: Open RStudio\nStep 2: Click on “Help” in the upper menu\nStep 3: Click on “Check for Updates”\n\nIf there are no updates to RStudio since you installed it, you are good to go! If you need to update RStudio, you will be sent to Posit (the parent company) to download the most recent version of RStudio desktop.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 1"
    ]
  },
  {
    "objectID": "weeks/week-1-r-rstudio.html#installing-rstudio",
    "href": "weeks/week-1-r-rstudio.html#installing-rstudio",
    "title": "Week 1, Part 1: R & RStudio",
    "section": "2.2 Installing RStudio",
    "text": "2.2 Installing RStudio\n\n\n\n\nDownloading the most recent version of RStudio works the same way regardless of whether you’ve never downloaded RStudio before or if you just need to update your version of RStudio.\nWhen you navigate to the RStudio download page (https://rstudio.com/products/rstudio/download/), the website should automatically detect your computer’s operating system. So, you should be able to simply click the blue “Download RStudio Desktop for [insert operating system here]” button.\nClicking the button will begin installing RStudio. Once the download has completed, you will need to open the application file (on a Mac this is a .dmg file, on Windows this is an exe file).",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 1"
    ]
  },
  {
    "objectID": "weeks/data-import-practice.html",
    "href": "weeks/data-import-practice.html",
    "title": "Data Import Practice",
    "section": "",
    "text": "# Code to read in the ages.csv data goes here!"
  },
  {
    "objectID": "weeks/data-import-practice.html#step-1-read-in-the-dataset-ages.csv.",
    "href": "weeks/data-import-practice.html#step-1-read-in-the-dataset-ages.csv.",
    "title": "Data Import Practice",
    "section": "",
    "text": "# Code to read in the ages.csv data goes here!"
  },
  {
    "objectID": "weeks/data-import-practice.html#step-2-read-in-the-dataset-ages_tab.txt",
    "href": "weeks/data-import-practice.html#step-2-read-in-the-dataset-ages_tab.txt",
    "title": "Data Import Practice",
    "section": "Step 2: Read in the dataset ages_tab.txt",
    "text": "Step 2: Read in the dataset ages_tab.txt\n\n# Code to read in the ages_tab.txt data goes here!"
  },
  {
    "objectID": "weeks/data-import-practice.html#step-3-read-in-the-dataset-ages_mystery.txt",
    "href": "weeks/data-import-practice.html#step-3-read-in-the-dataset-ages_mystery.txt",
    "title": "Data Import Practice",
    "section": "Step 3: Read in the dataset ages_mystery.txt",
    "text": "Step 3: Read in the dataset ages_mystery.txt\n\n# Code to read in the ages_mystery.txt data goes here!"
  },
  {
    "objectID": "weeks/data-import-practice.html#step-4-read-in-the-dataset-ages.xlsx",
    "href": "weeks/data-import-practice.html#step-4-read-in-the-dataset-ages.xlsx",
    "title": "Data Import Practice",
    "section": "Step 4: Read in the dataset ages.xlsx",
    "text": "Step 4: Read in the dataset ages.xlsx\n\n# Code to read in the ages.xlsx data goes here!"
  },
  {
    "objectID": "weeks/data-import-practice.html#step-5-both-read.csv-and-read.table-have-an-optional-argument-called-stringsasfactors.-figure-out-what-this-does.",
    "href": "weeks/data-import-practice.html#step-5-both-read.csv-and-read.table-have-an-optional-argument-called-stringsasfactors.-figure-out-what-this-does.",
    "title": "Data Import Practice",
    "section": "Step 5: Both read.csv and read.table have an optional argument called stringsAsFactors. Figure out what this does.",
    "text": "Step 5: Both read.csv and read.table have an optional argument called stringsAsFactors. Figure out what this does."
  },
  {
    "objectID": "weeks/data-import-practice.html#step-6-find-a-way-to-use-read_csv-to-read-ages.csv-with-the-variable-name-as-a-factor-and-age-as-a-character.",
    "href": "weeks/data-import-practice.html#step-6-find-a-way-to-use-read_csv-to-read-ages.csv-with-the-variable-name-as-a-factor-and-age-as-a-character.",
    "title": "Data Import Practice",
    "section": "Step 6: Find a way to use read_csv() to read ages.csv with the variable “Name” as a factor and “Age” as a character.",
    "text": "Step 6: Find a way to use read_csv() to read ages.csv with the variable “Name” as a factor and “Age” as a character.\n\n# Code to read in the ages.csv with \"Name\" as a factor and \"Age\" as a character goes here!"
  },
  {
    "objectID": "videos/week-1/directories.html#principles-of-reproducibility",
    "href": "videos/week-1/directories.html#principles-of-reproducibility",
    "title": "Directories & Scientific Reproducibility",
    "section": "Principles of Reproducibility",
    "text": "Principles of Reproducibility\n\nNuts and bolts\n\nThe documentation for a project should contain everything necessary (e.g., scripts, Quarto files) to reproduce the results.\n\n\n\n\nPortability\n\nAny user should be able to run the scripts on their own computer or workspace.\n\n\n\n\n\nOne-click Reproducibility\n\nReproducing all the computations should require (almost) nothing other than executing a single main script file."
  },
  {
    "objectID": "videos/week-1/directories.html#what-is-a-directory",
    "href": "videos/week-1/directories.html#what-is-a-directory",
    "title": "Directories & Scientific Reproducibility",
    "section": "What is a directory?",
    "text": "What is a directory?\n\nA directory is just a fancy name for a folder.\n\n\n\nYour working directory is the folder that R “thinks” it lives in at the moment.\n\n\ngetwd()\n\n\"/Users/allisontheobold/Documents/STAT 331/videos/week-1\""
  },
  {
    "objectID": "videos/week-1/directories.html#paths",
    "href": "videos/week-1/directories.html#paths",
    "title": "Directories & Scientific Reproducibility",
    "section": "Paths",
    "text": "Paths\n\nA path describes where a certain file or directory lives.\n\n\n\ngetwd()\n\n\"/Users/allisontheobold/Documents/STAT 331/videos/week-1\"\n\n\n\nThis file lives on my computer in my user files (/Users/),\n\n\non my account (/allisontheobold/),\n\n\nin my Documents (/Documents),\n\n\nin a series of organized folders (STAT 331/videos/week-1)."
  },
  {
    "objectID": "videos/week-1/directories.html#file-management-check-in",
    "href": "videos/week-1/directories.html#file-management-check-in",
    "title": "Directories & Scientific Reproducibility",
    "section": "File Management Check-in",
    "text": "File Management Check-in\n\n\nYour STAT 331 folder should live in your Documents.\nIt should have a Week 1 sub-folder.\nInside the Week 1 folder, there should be a Lab 1 sub-folder.\n\n\n\n\n\n\n\n\n\nYour folder cannot synch with anything online!\n\n\nYour STAT 331 folder cannot be in a folder stored on OneDrive or iCloud! Storing your project in this location will cause your code to periodically not run and I cannot help you fix it."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#thursday-september-26",
    "href": "slides/week-1/week-1-intro-version-control.html#thursday-september-26",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Thursday, September 26",
    "text": "Thursday, September 26\nToday we will…\n\n\nAnswer Clarifying Questions:\n\nSyllabus?\nQuestions from the reading?\nPA 1: Find the Mistakes?\n\nNew Material\n\nScripts + Notebooks\nVersion Control\n\nLab 1: Introduction to Quarto\nChallenge 1: Modifying your Quarto Document"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#scripts",
    "href": "slides/week-1/week-1-intro-version-control.html#scripts",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Scripts",
    "text": "Scripts\n\nScripts (File &gt; New File &gt; R Script) are files of code that are meant to be run on their own.\n\n\n\nScripts can be run in RStudio by clicking the Run button at the top of the editor window when the script is open.\nYou can also run code interactively in a script by:\n\nhighlighting lines of code and hitting run.\nplacing your cursor on a line of code and hitting run.\nplacing your cursor on a line of code and hitting ctrl + enter or command + enter."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#notebooks",
    "href": "slides/week-1/week-1-intro-version-control.html#notebooks",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Notebooks",
    "text": "Notebooks\nNotebooks are an implementation of literate programming.\n\nThey allow you to integrate code, output, text, images, etc. into a single document.\nE.g.,\n\nQuarto notebook\nR Markdown notebook\nJupyter notebook\n\n\nWe love notebooks because they help us produce a reproducible analysis!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#what-is-markdown",
    "href": "slides/week-1/week-1-intro-version-control.html#what-is-markdown",
    "title": "Scripts, Notebooks & Version Control",
    "section": "What is Markdown?",
    "text": "What is Markdown?\nMarkdown is a markup language.\nIt uses special symbols and formatting to make pretty documents.\n\n\n*italics* – makes italics\n**bold** – makes bold text\n# – makes headers\n! – includes images or HTML links\n&lt; &gt; – embeds URLs\n\n\n\nMarkdown files have the .md extension."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#what-is-quarto",
    "href": "slides/week-1/week-1-intro-version-control.html#what-is-quarto",
    "title": "Scripts, Notebooks & Version Control",
    "section": "What is Quarto?",
    "text": "What is Quarto?\nQuarto unifies and extends the R Markdown ecosystem.\n\n\n\n\n\n\n\n\n\nQuarto files have the .qmd extension."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#highlights-of-quarto",
    "href": "slides/week-1/week-1-intro-version-control.html#highlights-of-quarto",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Highlights of Quarto",
    "text": "Highlights of Quarto\n\nConsistent implementation of attractive and handy features across outputs:\n\nE.g., tabsets, code-folding, syntax highlighting, etc.\n\nMore accessible defaults and better support for accessibility.\nGuardrails that are helpful when learning:\n\nE.g., YAML completion, informative syntax errors, etc.\n\nSupport for other languages like Python, Julia, Observable, and more."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#quarto-formats",
    "href": "slides/week-1/week-1-intro-version-control.html#quarto-formats",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Quarto Formats",
    "text": "Quarto Formats\nQuarto makes moving between outputs straightforward.\n\nAll that needs to change between these formats is a few lines in the front matter (YAML)!\n\n\n\nDocument\ntitle: \"Lesson 1\"\nformat: html\nPresentation\ntitle: \"Lesson 1\"\nformat: revealjs\n\nWebsite\nproject:\n  type: website\n\nwebsite: \n  navbar: \n    left:\n      - lesson-1.qmd"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#quarto-components",
    "href": "slides/week-1/week-1-intro-version-control.html#quarto-components",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Quarto Components",
    "text": "Quarto Components"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#r-code-options-in-quarto",
    "href": "slides/week-1/week-1-intro-version-control.html#r-code-options-in-quarto",
    "title": "Scripts, Notebooks & Version Control",
    "section": "R Code Options in Quarto",
    "text": "R Code Options in Quarto\nR code chunk options are included at the top of each code chunk, prefaced with a #| (hashpipe).\n\nThese options control how the following code is run and reported in the final Quarto document.\nSome R code options can also be included in the front matter (YAML) which would be applied globally to the entire document."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#r-code-options-in-quarto-1",
    "href": "slides/week-1/week-1-intro-version-control.html#r-code-options-in-quarto-1",
    "title": "Scripts, Notebooks & Version Control",
    "section": "R Code Options in Quarto",
    "text": "R Code Options in Quarto"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#yaml-completion-in-quarto",
    "href": "slides/week-1/week-1-intro-version-control.html#yaml-completion-in-quarto",
    "title": "Scripts, Notebooks & Version Control",
    "section": "YAML Completion in Quarto",
    "text": "YAML Completion in Quarto"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document",
    "href": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Rendering your Quarto Document",
    "text": "Rendering your Quarto Document\nTo take your .qmd file and make it look pretty, you have to render it."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document-1",
    "href": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document-1",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Rendering your Quarto Document",
    "text": "Rendering your Quarto Document\nQuarto CLI (command line interface) orchestrates each step of rendering:\n\nProcess the executable code chunks with either knitr or jupyter.\nConvert the resulting Markdown file to the desired output."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document-2",
    "href": "slides/week-1/week-1-intro-version-control.html#rendering-your-quarto-document-2",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Rendering your Quarto Document",
    "text": "Rendering your Quarto Document\nWhen you click Render:\n\n\nYour file is saved.\nThe R code written in your .qmd file gets run in order.\n\n\nIt starts from scratch, even if you previously ran some of the code in RStudio.\n\n\nA new file is created.\n\n\nIf your Quarto file is called “Lab1.qmd”, then a file called “Lab1.html” will be created.\nThis will be saved in the same folder as “Lab1.qmd”."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#git-vs-github",
    "href": "slides/week-1/week-1-intro-version-control.html#git-vs-github",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Git vs GitHub",
    "text": "Git vs GitHub\n\n\n\n\n\n\n\n\n\n\n\n\nA system for version control that manages a collection of files in a structured way.\nUses the command line or a GUI.\nGit is local."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#git-vs-github-1",
    "href": "slides/week-1/week-1-intro-version-control.html#git-vs-github-1",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Git vs GitHub",
    "text": "Git vs GitHub\n\n\n\n\n\n\n\n\nA system for version control that manages a collection of files in a structured way.\nUses the command line or a GUI.\nGit is local.\n\n\n\n\n\n\n\n\nA cloud-based service that lets you use git across many computers.\nBasic services are free, advanced services are paid (like RStudio!).\nGitHub is remote."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#why-learn-github",
    "href": "slides/week-1/week-1-intro-version-control.html#why-learn-github",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Why Learn GitHub?",
    "text": "Why Learn GitHub?\n\nGitHub provides a structured way for tracking changes to files over the course of a project.\n\n\nThink Google Docs or Dropbox history, but more structured and powerful!\n\n\nGitHub makes it easy to have multiple people working on the same files at the same time.\nYou can host a URL of fun things (like the class text, these slides, a personal website, etc.) with GitHub pages."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#git-repositories",
    "href": "slides/week-1/week-1-intro-version-control.html#git-repositories",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Git Repositories",
    "text": "Git Repositories\nGit is based on repositories.\n\n\n\nThink of a repository (repo) as a directory (folder) for a single project.\n\nThis directory will likely contain code, documentation, data, to do lists, etc. associated with the project.\nYou can link a local repo with a remote copy."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#cloning-a-repo",
    "href": "slides/week-1/week-1-intro-version-control.html#cloning-a-repo",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Cloning a Repo",
    "text": "Cloning a Repo\n\n\n\nCreate an exact copy of a remote repo on your local machine."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#committing-changes",
    "href": "slides/week-1/week-1-intro-version-control.html#committing-changes",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Committing Changes",
    "text": "Committing Changes\nTell git you have made changes you want to add to the repo.\n\nAlso provide a commit message – a short label describing what the changes are and why they exist.\n\n\n\nThe red line is a change we commit (add) to the repo.\n\n\n\n\n\n\n\n\n\nThe log of these changes is called your commit history.\n\nYou can always go back to old copies!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#commit-tips",
    "href": "slides/week-1/week-1-intro-version-control.html#commit-tips",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Commit Tips",
    "text": "Commit Tips\n\nUse short, but informative commit messages.\nCommit small blocks of changes – commit every time you accomplish a small task (e.g., one problem in the lab).\n\nYou’ll have a set of bite-sized changes (with description) to serve as a record of what you’ve done.\nWith frequent commits, its easier to find the issue if / when you mess up!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#pushing-changes",
    "href": "slides/week-1/week-1-intro-version-control.html#pushing-changes",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Pushing Changes",
    "text": "Pushing Changes\n\n\n\nUpdate the copy of your repo on GitHub so it has the most recent changes you’ve made on your machine."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#pulling-changes",
    "href": "slides/week-1/week-1-intro-version-control.html#pulling-changes",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Pulling Changes",
    "text": "Pulling Changes\n\n\n\nUpdate the local copy of your repo (the copy on your computer) with the version on GitHub."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#workflow",
    "href": "slides/week-1/week-1-intro-version-control.html#workflow",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Workflow",
    "text": "Workflow\nWhen you have an existing local repo:\n\n\nPull the repo to make sure you have the most up to date version (especially if you are working on different computers).\nMake some changes locally.\nCommit the changes to git.\nPush your changes to GitHub."
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#previous-steps",
    "href": "slides/week-1/week-1-intro-version-control.html#previous-steps",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Previous Steps",
    "text": "Previous Steps\nYou were asked to complete the following steps before coming to class today:\n\nCreate a GitHub account\nIntroduce yourself to git (in RStudio)\nGenerate a Personal Access Token (PAT)\nStore your PAT in RStudio"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#verifying-your-connection",
    "href": "slides/week-1/week-1-intro-version-control.html#verifying-your-connection",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Verifying Your Connection",
    "text": "Verifying Your Connection\n\n\nOpen RStudio and run the following code in your console (lower left pane):\n\n\n\n\n\nusethis::git_sitrep()\n\n\n\n\n\nYou should see something like:\n\n── GitHub user \n• Default GitHub host: 'https://github.com'\n• Personal access token for 'https://github.com': '&lt;discovered&gt;'\n• GitHub user: 'atheobold'\n• Token scopes: 'admin:org, admin:public_key, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:packages'\n• Email(s): 'atheobol@calpoly.edu (primary)', 'theobold.allison970@gmail.com', '12439090+atheobold@users.noreply.github.com'\nℹ No active usethis project\n\n\n\nIf that is not the case, Dr. Theobold will help you troubleshoot in 5-minutes!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#once-youve-cloned-the-repo",
    "href": "slides/week-1/week-1-intro-version-control.html#once-youve-cloned-the-repo",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Once You’ve Cloned the Repo",
    "text": "Once You’ve Cloned the Repo\nStep 3: Open the lab-1.qmd file\nStep 4: Change your name\nStep 5: Commit your change (with a nice message!)\nStep 6: Push your change"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#some-words-about-chatgpt",
    "href": "slides/week-1/week-1-intro-version-control.html#some-words-about-chatgpt",
    "title": "Scripts, Notebooks & Version Control",
    "section": "Some words about ChatGPT…",
    "text": "Some words about ChatGPT…"
  },
  {
    "objectID": "slides/week-1/week-1-intro-version-control.html#to-do",
    "href": "slides/week-1/week-1-intro-version-control.html#to-do",
    "title": "Scripts, Notebooks & Version Control",
    "section": "To do…",
    "text": "To do…\n\nLab 1: Introduction to Quarto\n\nDue Sunday (9/29) at 11:59pm\n\nChallenge 1: Modifying Your Quarto Document\n\nDue Sunday (9/29) at 11:59pm\n\nComplete the Week 2 Coursework\n\nCheck-ins 2.1 + 2.2 due Tuesday (10/1) by the start of class"
  },
  {
    "objectID": "labs/instructions/lab-2-instructions.html",
    "href": "labs/instructions/lab-2-instructions.html",
    "title": "Lab 2: Exploring Rodents with ggplot2",
    "section": "",
    "text": "You can find the Lab 1 materials in the Lab 2 repository on GitHub. When you click on the provided link, you will end up on the landing page for the repository.\nWe’re going to follow the same steps as last week to make your own copy of this repository:\n\n\n\n\n\n\nCopying the Repository\n\n\n\n\n\n\nClick on icon that says , to create your own copy of my repository\nOnce you’ve forked the repository, your copy should open.\nClick on the big green button that says “&lt;&gt; Code”.\nCopy the URL to your clipboard (you should be copying the HTTPS URL).\nOpen RStudio\nOpen a new project by selecting “File” and then clicking on “New Project…”\nIn the box that opens, select “Version Control”.\nIn the next screen, select “Git”.\nIn the “repository URL” paste the URL of your new GitHub repository.\nIn the “Create project as a subdirectory of” option, click on “Browse”.\nNavigate (or create) a “Lab 2” folder, included in your Week 2 folder in your STAT 331 folder. Once you get there, click “Open”.\nClick “Create Project”.\n\n\n\n\nNow that you have a copy of the repository, we need to commit the files to our repo. To do this, follow the steps below:\n\n\n\n\n\n\nFirst Commit\n\n\n\n\n\n\nClick the “Git” tab in upper right pane\nCheck the “Staged” box for every file listed\nClick “Commit”\nIn the box that opens, type a message in “Commit message”, such as “Initialize lab 1”.\nClick “Commit”.\nClick the green “Push” button to send your local changes to GitHub.\n\n\n\n\nNow you are ready to go! Remember, as you are going through the lab I would strongly recommend rendering your HTML and committing your after every question!\n\n\n\nPart of learning to program is learning from a variety of resources. Thus, I expect you will use resources that you find on the internet. There is, however, an important balance between copying someone else’s code and using their code to learn. Therefore, if you use external resources, I want to know about it.\n\nIf you used Google, you are expected to “inform” me of any resources you used by pasting the link to the resource in a code comment next to where you used that resource.\nIf you used ChatGPT, you are expected to “inform” me of the assistance you received by (1) indicating somewhere in the problem that you used ChatGPT (e.g., below the question prompt or as a code comment), and (2) downloading and attaching the .txt file containing your entire conversation with ChatGPT.\n\nAdditionally, you are permitted and encouraged to work with your peers as you complete lab assignments, but you are expected to do your own work. Copying from each other is cheating, and letting people copy from you is also cheating. Please don’t do either of those things.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/instructions/lab-2-instructions.html#step-1-accessing-making-a-copy-from-github",
    "href": "labs/instructions/lab-2-instructions.html#step-1-accessing-making-a-copy-from-github",
    "title": "Lab 2: Exploring Rodents with ggplot2",
    "section": "",
    "text": "You can find the Lab 1 materials in the Lab 2 repository on GitHub. When you click on the provided link, you will end up on the landing page for the repository.\nWe’re going to follow the same steps as last week to make your own copy of this repository:\n\n\n\n\n\n\nCopying the Repository\n\n\n\n\n\n\nClick on icon that says , to create your own copy of my repository\nOnce you’ve forked the repository, your copy should open.\nClick on the big green button that says “&lt;&gt; Code”.\nCopy the URL to your clipboard (you should be copying the HTTPS URL).\nOpen RStudio\nOpen a new project by selecting “File” and then clicking on “New Project…”\nIn the box that opens, select “Version Control”.\nIn the next screen, select “Git”.\nIn the “repository URL” paste the URL of your new GitHub repository.\nIn the “Create project as a subdirectory of” option, click on “Browse”.\nNavigate (or create) a “Lab 2” folder, included in your Week 2 folder in your STAT 331 folder. Once you get there, click “Open”.\nClick “Create Project”.\n\n\n\n\nNow that you have a copy of the repository, we need to commit the files to our repo. To do this, follow the steps below:\n\n\n\n\n\n\nFirst Commit\n\n\n\n\n\n\nClick the “Git” tab in upper right pane\nCheck the “Staged” box for every file listed\nClick “Commit”\nIn the box that opens, type a message in “Commit message”, such as “Initialize lab 1”.\nClick “Commit”.\nClick the green “Push” button to send your local changes to GitHub.\n\n\n\n\nNow you are ready to go! Remember, as you are going through the lab I would strongly recommend rendering your HTML and committing your after every question!",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/instructions/lab-2-instructions.html#seeking-help",
    "href": "labs/instructions/lab-2-instructions.html#seeking-help",
    "title": "Lab 2: Exploring Rodents with ggplot2",
    "section": "",
    "text": "Part of learning to program is learning from a variety of resources. Thus, I expect you will use resources that you find on the internet. There is, however, an important balance between copying someone else’s code and using their code to learn. Therefore, if you use external resources, I want to know about it.\n\nIf you used Google, you are expected to “inform” me of any resources you used by pasting the link to the resource in a code comment next to where you used that resource.\nIf you used ChatGPT, you are expected to “inform” me of the assistance you received by (1) indicating somewhere in the problem that you used ChatGPT (e.g., below the question prompt or as a code comment), and (2) downloading and attaching the .txt file containing your entire conversation with ChatGPT.\n\nAdditionally, you are permitted and encouraged to work with your peers as you complete lab assignments, but you are expected to do your own work. Copying from each other is cheating, and letting people copy from you is also cheating. Please don’t do either of those things.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/instructions/lab-2-instructions.html#scatterplot",
    "href": "labs/instructions/lab-2-instructions.html#scatterplot",
    "title": "Lab 2: Exploring Rodents with ggplot2",
    "section": "Scatterplot",
    "text": "Scatterplot\n4. First, let’s create a scatterplot of the relationship between weight (on the \\(x\\)-axis) and hindfoot_length (on the \\(y\\)-axis).\nWe can see there are a lot of points plotted on top of each other. Let’s try and modify this plot to extract more information from it.\n5. Let’s add transparency (alpha) to the points, to make the points more transparent and (possibly) easier to see.\n\nDespite our best efforts there is still a substantial amount of overplotting occurring in our scatterplot. Let’s try splitting the dataset into smaller subsets and see if that allows for us to see the trends a bit better.\n6. Facet your scatterplot by species.\n\n7. No plot is complete without axis labels and a title. Include reader friendly labels and a title to your plot.\n\nIt takes a larger cognitive load to read text that is rotated. It is common practice in many journals and media outlets to move the \\(y\\)-axis label to the top of the graph under the title.\n8. Specify your \\(y\\)-axis label to be empty and move the \\(y\\)-axis label into the subtitle.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/instructions/lab-2-instructions.html#boxplots",
    "href": "labs/instructions/lab-2-instructions.html#boxplots",
    "title": "Lab 2: Exploring Rodents with ggplot2",
    "section": "Boxplots",
    "text": "Boxplots\n10. Create side-by-side boxplots to visualize the distribution of weight within each species.\nA fundamental complaint of boxplots is that they do not plot the raw data. However, with ggplot we can add the raw points on top of the boxplots!\n11. Add another layer to your previous plot that plots each observation.\n\nAlright, this should look less than optimal. Your points should appear rather stacked on top of each other. To make them less stacked, we need to jitter them a bit, using geom_jitter().\n12. Remove the previous layer and include a geom_jitter() layer instead.\n\nThat should look a bit better! But its really hard to see the points when everything is black.\n13. Set the color aesthetic in geom_jitter() to change the color of the points and add set the alpha aesthetic to add transparency.\n\n\n\n\n\n\n\nNote\n\n\n\nYou are welcome to use whatever color you wish! Some of my favorites are “orange3” and “steelblue”.\n\n\nGreat! Now that you can see the points, you should notice something odd: there are two colors of points still being plotted. Some of the observations are being plotted twice, once from geom_boxplot() as outliers and again from geom_jitter()!\n14. Inspect the help file for geom_boxplot() and see how you can remove the outliers from being plotted by geom_boxplot(). Make this change in your code!\n\nSome small changes can make big differences to plots. One of these changes are better labels for a plot’s axes and legend.\n15. Modify the \\(x\\)-axis and \\(y\\)-axis labels to describe what is being plotted. Be sure to include any necessary units! You might also be getting overlap in the species names – use theme(axis.text.x = ____) or theme(axis.text.y = ____) to turn the species axis labels 45 degrees.\n\nSome people (and journals) prefer for boxplots to be stacked with a specific orientation! Let’s practice changing the orientation of our boxplots.\n16. Now copy-paste your boxplot code you’ve been adding to above. Flip the orientation of your boxplots. If you created horizontally stacked boxplots, your boxplots should now be stacked vertically. If you had vertically stacked boxplots, you should now stack your boxplots horizontally!\nNotice how vertically stacked boxplots make the species labels more readable than horizontally stacked boxplots (even when the axis labels are rotated). This is good practice!",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/instructions/challenge-2-instructions.html",
    "href": "labs/instructions/challenge-2-instructions.html",
    "title": "Challenge 2: Spicing things up with ggplot2",
    "section": "",
    "text": "For this week’s Challenge, you will have three different options to explore. I’ve arranged these options in terms of their “spiciness,” or the difficulty of completing the task. You are only required to complete one task, but if you are interested in exploring more than one, feel free!\nThis is a great place to let your creativity show! Make sure to indicate what additional touches you added, and provide any online references you used.\n\n\n\n\n\n\nTip\n\n\n\nYou will be working in the challenge-2.qmd file, found in the repository you cloned for Lab 2. Within this document, make sure to specify that your plots are contained in your document (self-contained: true) and that your code is visible to the reader (echo: true). If there are other formatting specifics you would like to include, feel free to toss those in the YAML, too!\nThen, create a setup code chunk to load the packages and read in the surveys.csv data file exactly how you did in Lab 2.\nCreate another code chunk and paste in your code from Question 14 or Question 15 in Lab 2 – we will be modifying the box plot of weights by species!\n\n\n\n🌶 Medium: Ridge Plots\nIn Lab 2, you used side-by-side boxplots to visualize the distribution of weight within each species of rodent. Boxplots have substantial flaws, namely that they disguise distributions with multiple modes.\nA “superior” alternative is the density plot. However, ggplot2 does not allow for side-by-side density plots using geom_density(). Instead, we will need to make use of the ggridges package to create side-by-side density (ridge) plots.\n\nFor this challenge you are to change your boxplots to ridge plots. You will need to install the ggridges package and explore the geom_density_ridges() function.\n\n\n\n🌶 🌶 Spicy: Exploring Color Themes\nThe built-in ggplot() color scheme may not include the colors you were looking for. Don’t worry – there are many other color palettes available to use!\nYou can change the colors used by ggplot() in a few different ways.\n\nManual Specification\nAdd the scale_color_manual() or scale_fill_manual() functions to your plot and directly specify the colors you want to use. You can either:\n\ndefine a vector of colors within the scale functions (e.g. values = c(\"blue\", \"black\", \"red\", \"green\")) OR\ncreate a vector of colors using hex numbers and store that vector as a variable. Then, call that vector in the scale_color_manual() function.\n\nHere are some exaplme hex color schemes:\n\n# A vector of a RG color deficient friendly palette with gray:\ncdPalette_grey &lt;- c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n\n# A vector of a RG color deficient friendly palette with black:\ncdPalette_blk &lt;- c(\"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are interested in using specific hex colors, I like the image color picker app to find the colors I want.\n\n\n\n\nPackage Specification\nWhile manual specification may be necessary for some contexts, it can be a real pain to handpick 5+ colors. This is where color scales built-in to R packages come in handy! Popular packages for colors include:\n\nRColorBrewer – change colors by using scale_fill_brewer() or scale_colour_brewer().\nviridis – change colors by using scale_colour_viridis_d() for discrete data, scale_colour_viridis_c() for continuous data.\nggsci – change colors by using scale_color_&lt;PALNAME&gt;() or scale_fill_&lt;PALNAME&gt;(), where you specify the name of the palette you wish to use (e.g. scale_color_aaas()).\n\n\n\n\n\n\n\nNote\n\n\n\nThis website provides an exhaustive list of color themes available through various packages.\n\n\n\nIn this challenge you are expected to use this information to modify the boxplots you created Lab 2. First, you are to color the boxplots based on the variable genus. Next, you are to change the colors used for genus using either manual color specification or any of the packages listed here (or others!).\n\n\n\n\n🌶 🌶 🌶 Hot: Exploring ggplot2 Annotation\nSome data scientists advocate that we should try to eliminate legends from our plots to make them more clear. Instead of using legends, which cause the reader’s eye to stray from the plot, we should use annotation.\nWe can add annotation(s) to a ggplot() using the annotate() function:\n\nggplot(data = surveys, \n       mapping = aes(y = species,\n                     x = weight,\n                     color = genus)) +\n  geom_boxplot() +\n  scale_color_manual(values = cdPalette_grey) + \n  annotate(\"text\", y = 6, x = 250, label = \"Sigmodon\") +\n  annotate(\"text\", y = 4, x = 250, label = \"Perognathus\") +\n  theme(legend.position = \"none\") +\n  labs(x = \"Weight (g)\",\n       y = \"\",\n       subtitle = \"Species\",\n       title = \"Rodent Weight by Species\")\n\nNote that I’ve labeled the “Sigmodon” and “Perognathus” genera, so the reader can tell that these boxplots are associated with their respective genus.\n\nIn this challenge you are expected to use this information to modify the boxplots you created in Lab 2. First, you are to color the boxplots based on the variable genus. Next, you are to add annotations for each genus next to the boxplot(s) associated with that genus. Finally, you are expected to use the theme() function to remove the color legend from the plot, since it is no longer needed!"
  },
  {
    "objectID": "group-activities/week-2/expert-designer.html",
    "href": "group-activities/week-2/expert-designer.html",
    "title": "Expert Designer",
    "section": "",
    "text": "This activity is designed to simulate the environment in which you will be working for the weekly Practice Activities."
  },
  {
    "objectID": "group-activities/week-2/expert-designer.html#instructions-roles-rules",
    "href": "group-activities/week-2/expert-designer.html#instructions-roles-rules",
    "title": "Expert Designer",
    "section": "Instructions, Roles, & Rules",
    "text": "Instructions, Roles, & Rules\nGet into groups of four (4) students. Similar to last week’s Broken Circles activity, each of you has an envelope containing different shapes.\n\nDesigner\nIn this activity, one person in your group will take on the role of the “designer,” two members will be the “players,” and one person will be the “observer.” The designer uses every shape in the envelope to create a design that is not shared with anyone else. The designer is then tasked with instructing the players how to replicate the design they created, but there are some rules.\n\nThe designer cannot touch the players shapes.\nThe designer cannot tell the players how to assemble the shapes into the correct design.\nThe designer can respond to questions posed by the players.\n\n\n\nPlayers\n“Players” are tasked with solving the design made by the “designer.” Players can pose questions to the designer to uncover their design. Once an player believes they have figured out the design, the designer should check their solution. If the designer says the solution is correct, then the player can assist the designer in answering questions posed by the other players.\n\n\nObserver\nThe “observer” is tasked with monitoring the interactions between the designer and the players. Specifically, the observer should check off the number of times they see two behaviors occurring, (1) explaining by telling how, and (2) everybody helps. The observer should have a scoring sheet to tally the number of times they see each behavior."
  },
  {
    "objectID": "group-activities/week-2/expert-designer.html#getting-started",
    "href": "group-activities/week-2/expert-designer.html#getting-started",
    "title": "Expert Designer",
    "section": "Getting Started",
    "text": "Getting Started\nChoose one person in your group to be the first designer. Carry out the process described above until every observer has correctly identified the design. You will have 10-minutes to complete this task.\nOnce you have completed this task, if there is still time remaining your group should choose a new designer and repeat the process."
  },
  {
    "objectID": "group-activities/week-2/expert-designer.html#discussion",
    "href": "group-activities/week-2/expert-designer.html#discussion",
    "title": "Expert Designer",
    "section": "Discussion",
    "text": "Discussion\n\nWhat do you think this game was about? What was its purpose?\nWhat did your group did that made you cooperate more successfully?\nWhat did your group did that made cooperation harder?\nWhat are some behaviors that could be implemented in the future to make cooperation easier?"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#view-original-data",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#view-original-data",
    "title": "Master Script Data Processing",
    "section": "View Original Data",
    "text": "View Original Data"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#filter-just-us-based-jobs",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#filter-just-us-based-jobs",
    "title": "Master Script Data Processing",
    "section": "Filter Just US Based Jobs",
    "text": "Filter Just US Based Jobs"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#filter-out-entry-level-jobs-only",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#filter-out-entry-level-jobs-only",
    "title": "Master Script Data Processing",
    "section": "Filter out entry level jobs only",
    "text": "Filter out entry level jobs only"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#count-of-positions-by-remote-work-and-company-size",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#count-of-positions-by-remote-work-and-company-size",
    "title": "Master Script Data Processing",
    "section": "Count of positions by Remote Work and Company Size",
    "text": "Count of positions by Remote Work and Company Size"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#graph-of-remote-work-and-company-size",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#graph-of-remote-work-and-company-size",
    "title": "Master Script Data Processing",
    "section": "Graph of Remote Work and Company Size",
    "text": "Graph of Remote Work and Company Size"
  },
  {
    "objectID": "group-activities/week-1/data-cleaning-viz-steps.html#group-and-calculate-average-salary-by-year",
    "href": "group-activities/week-1/data-cleaning-viz-steps.html#group-and-calculate-average-salary-by-year",
    "title": "Master Script Data Processing",
    "section": "Group and Calculate Average Salary by year",
    "text": "Group and Calculate Average Salary by year"
  },
  {
    "objectID": "group-activities/week-1/base-r.html",
    "href": "group-activities/week-1/base-r.html",
    "title": "Practice Activity 1: Find the Mistakes",
    "section": "",
    "text": "Today you will be creating and manipulating vectors, lists, and data frames to uncover a top secret message.\nSome advice:"
  },
  {
    "objectID": "group-activities/week-1/base-r.html#part-zero-accessing-the-practice-activity",
    "href": "group-activities/week-1/base-r.html#part-zero-accessing-the-practice-activity",
    "title": "Practice Activity 1: Find the Mistakes",
    "section": "Part Zero: Accessing the Practice Activity",
    "text": "Part Zero: Accessing the Practice Activity"
  },
  {
    "objectID": "group-activities/week-1/base-r.html#part-one-setup",
    "href": "group-activities/week-1/base-r.html#part-one-setup",
    "title": "Practice Activity 1: Find the Mistakes",
    "section": "Part One: Setup",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and / or do the desired task incorrectly. Find the mistake, and correct it to complete the intended action.\n\nCreate vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\",\n                \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\",\n                \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \":\")\n\n\nMake one long vector containing all the symbols.\n\n\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\n\nTurn the my_symbols vector into a data frame, with one column named “Symbol”.\n\n\nmy_symbols &lt;- dataframe(Symbol = my_symbols)\n\n\nFind the total number of symbols we have in our data frame.\n\n\nlen &lt;- length(my_symbols)\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.\n\n\nmy_symbols%Num &lt;- 1:len"
  },
  {
    "objectID": "group-activities/week-1/base-r.html#part-two-decoding-the-secret-message.",
    "href": "group-activities/week-1/base-r.html#part-two-decoding-the-secret-message.",
    "title": "Practice Activity 1: Find the Mistakes",
    "section": "Part Two: Decoding the secret message.",
    "text": "Part Two: Decoding the secret message.\nThis chunk will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read_csv(\"https://www.dropbox.com/s/k72h1zewk4gtqep/PA_Secret_Code?dl=1\", \n                       col_names = FALSE)$X1\n\nBy altering this top secret set of numbers, you will be able to create a message. Write your own code to complete the steps, in the order given below.\n\nAdd 14 to every number.\nMultiply every number by 18, then subtract 257.\nUse the exp() function to exponentiate every number.\nSquare every number.\n\nHint: To update a vector after performing an operation, you overwrite the existing object with its updated counterpart. This looks something like this:\nx &lt;- x + 12,\nwhere the original value(s) in x have had 12 added to them, and the resulting values are put back in to the object named x.\n\n## Code to carry out steps 6-9 \n\nCheckpoint: Headquarters has informed you that at this stage of decoding, there should be 352 numbers in the secret message that are below 17. Write the code to verify that this is true for your top_secret object!\nHint: This is what is called a “relational” comparison, where you compare an object to a number and R will give you a vector of TRUEs and FALSEs based on whether the comparison is / is not met. You can then use these TRUEs and FALSEs as numbers, since TRUE = 1 and FALSE = 0 in R land.\n\n# Write code to verify that there are 352 numbers with values **below** 17\n\nNext, carry out the following steps:\n\nTurn your vector of numbers into a matrix with 5 columns.\nSeparately from your top secret numbers, create a vector of all the even numbers between 1 and 382. Name it “evens”. That is, “evens” should contain 2, 4, 6, 8 …, 382.\nSubtract the “evens” vector from the first column of your secret message matrix.\nSubtract 100 from all numbers 18-24th rows of the 3rd column.\nMultiply all numbers in the 4th and 5th column by 2.\nTurn your matrix back into a vector.\n\n\n## Code to carry out steps 10-15\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, all numbers in indices 500 and beyond are below 100. Write the code to verify that this is true for your top_secret object!\nHint: Use a relational comparison similar to what you used in the last checkpoint, but here you will need to subset values from your vector!\n\n# Write code to verify that indices 500 and beyond have values **below** 100\n\n\nTake the square root of all numbers in indices 38 to 465.\nUse the round() function to round all numbers to the nearest whole number.\nReplace all instances of the number 39 with 20.\n\nHint: Step 18 requires another relational comparison, but this time it is equality. Equality in R is checked with a double equal sign rather than a single equal sign!\n\n# Code for steps 16-18\n\nCheckpoint: Headquarters has informed you that your final message should have 344 even numbers.\nHint: Checking for divisibility is an interesting operation that isn’t done much in R. Modulus is the operation you are interested in, where you are checking for whether the numbers are divisible by 2, with no remainder. See what you can find about modulus in R!\n\n# Code to verify how many even numbers are in your top_secret vector"
  },
  {
    "objectID": "group-activities/week-1/base-r.html#part-3-the-secret-message",
    "href": "group-activities/week-1/base-r.html#part-3-the-secret-message",
    "title": "Practice Activity 1: Find the Mistakes",
    "section": "Part 3: The secret message!",
    "text": "Part 3: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message, by running the following code:\n\nstringr::str_c(my_symbols$Symbol[top_secret], collapse = \"\")\n\nGoogle the first line of this message, if you do not recognize it, to see what poem it is."
  },
  {
    "objectID": "course-materials/course_resources.html",
    "href": "course-materials/course_resources.html",
    "title": "R Resources",
    "section": "",
    "text": "Tip\n\n\n\nClick on the link to access the R Cheatsheet related to a specific topic / package!\n\n\n\nWeekly R Cheatsheets\nWeek 1\n\nRStudion IDE\nQuarto\nBase R\nGit & GitHub\n\nWeek 2\n\nData Visualization with ggplot2\nData Import with readr\n\nWeek 3\n\nData Wrangling with dplyr\n\nWeek 4\n\nData Tidying with tidyr\nFactors with forcats\n\nWeek 5\n\nDates with lubridate\nStrings with stringr\nRegular Expressions\n\nWeek 7\n\nTidy Evaluation\n\nWeek 8\n\nIteration with purrr",
    "crumbs": [
      "Course information",
      "R Resources"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html",
    "href": "course-materials/course-syllabus.html",
    "title": "STAT 331, Fall 2024",
    "section": "",
    "text": "Statistical Computing with R1\n\nTR 12:10pm - 2:00pm\nTextbook:\nhttps://r4ds.hadley.nz/\n\n\n\n\n\n\nImage by Alison Horst\nWebsite:\nhttps://canvas.calpoly.edu",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#revisions",
    "href": "course-materials/course-syllabus.html#revisions",
    "title": "STAT 331, Fall 2024",
    "section": "3.1 Revisions",
    "text": "3.1 Revisions\nThe grading system for this class encourages you to submit revisions on Lab and Challenge problems you were not initially successful with. When I grade your Lab and Challenge assignments, I will mark each problem with an S, a G, or an N. You will have the option to retry any Learning Targets for which you scored a G or an N on. When you complete revisions, you will submit a new HTML containing your revisions, alongside written reflections of how your understanding changed from when you first attempted the problem. These reflections are expected to be written immediately below the problem which you revised.\nIt’s not enough to say “[x] was wrong, so I fixed it”—I need you to talk about why you got [x] wrong in the first place and what you learned that changed your mind. What do you know now that you didn’t know before? Who or what helped you learn?\n\nIf your revision does not include reflections, I’ll ask you to add them.\nIf your revisions do not include reflections by the deadline, your revisions are not eligible to be regraded.\nSee some examples of really good reflections here – they’re (mostly) from my STAT 313 course, but I think you’ll get the idea.\nSubmit your revision to the same assignment box on Canvas as your original. This helps me keep track of any outstanding revisions each person has.\n\nIt is my goal to have your lab and challenge assignments (which are due on Sunday night) back to you no later than Thursday, so we can spend time talking about the revisions during class. You will then have until the following Friday to complete your revisions on the problems you received a G or an N on.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#accomplishment-of-learning-targets",
    "href": "course-materials/course-syllabus.html#accomplishment-of-learning-targets",
    "title": "STAT 331, Fall 2024",
    "section": "4.1 Accomplishment of Learning Targets",
    "text": "4.1 Accomplishment of Learning Targets\nEach week, a set of learning targets will be outlined. These learning targets will not exist solely within a given week. You will find that the skills you learn early in the course will be used throughout the course. Whereas, some skills, learned later in the course, will not be used as often. You can demonstrate proficiency with these skills through three main avenues: Group-based Practice Activities Lab Assignments Challenge Assignments\nHowever, evidence of continued learning can only be demonstrated within individual lab assignments. You can keep track of your progress yourself using this Interactive Checklist.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#evidence-of-continued-learning",
    "href": "course-materials/course-syllabus.html#evidence-of-continued-learning",
    "title": "STAT 331, Fall 2024",
    "section": "4.2 Evidence of Continued Learning",
    "text": "4.2 Evidence of Continued Learning\nEach week, you will be required to complete a Lab and Challenge assignment where you demonstrate your understanding of that week’s learning targets in the context of a new dataset. These assignments provide two different perspectives of your continued learning.\n\nThey demonstrate your ability to extend your thinking beyond what you’ve learned in class.\nThey demonstrate your ability to revise your thinking.\n\n\nExtend Your Thinking\nEach Lab Assignment will have a Challenge Problem which asks you to extend the skills you’ve learned in class in a new way. You will often have the choice of what direction you would like to expand your knowledge. There are no specific requirements for how you extend your skills, only that you extend your thinking in some (measurable) way.\n\n\nRevise Your Thinking\nFor the problems in each Lab Assignment, I will give copious written feedback, but I’ll also summarize my feedback with a letter on the SGN scale (as discussed previously). To demonstrate your ability to revise your thinking, I encourage you to revise and resubmit any problems marked G or N.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#growth-as-a-team-member",
    "href": "course-materials/course-syllabus.html#growth-as-a-team-member",
    "title": "STAT 331, Fall 2024",
    "section": "4.3 Growth as a Team Member",
    "text": "4.3 Growth as a Team Member\nThere are two ways you will evaluate your growth as a team member. The first is through your collaboration with your team members. The second is through the code reviews you provide your peers. \n\nCollaborative Group Work\nThis course uses collaborative learning to provide a supportive community when initially exploring the concepts associated with each week. On Tuesdays, you will collaborate in assigned teams to complete a Practice Activity. Collaborating on the Practice Activity is more than independently coding each task and asking someone a question when you get stuck. Collaborating is working together with your team to accomplish each question. \n\nMany people are uncomfortable working in a team for a variety of reasons, such as fearing looking dumb, being rejected, or being disrespected. It is my hope that our weekly collaborations will offer opportunities for you to grow as a group member, by becoming more aware of how you interact with others. \nDuring the first week of class, each of you will be placed in a group with one other student. During Weeks 2-5, you will work with this person on the Practice Activities we complete during class on Tuesdays. To make group collaborations more equitable, I expect for you and your partner to alternative between two “roles”—recorder and listener. We will discuss these roles in class, but here are some rough descriptions of the scope of each role:\n\n\n\nPeer Code Review\nOne of my favorite sayings is “Programs must be written for people to read, and only incidentally for machines to execute.” Code review has two major benefits, (1) you get feedback on the readability, tidiness, and efficiency of your code, and (2) by reviewing someone else’s code you learn more about your own code!\nHere are some guidelines and examples of what you should be looking for and how to phrase your peer code reviews.\nYou hopefully noticed that writing “tidy” and “efficient” code are two of the Learning Targets for this course. To demonstrate proficiency in these targets, you will earn badges from your peers. For each lab assignment, everyone in the class will provide an anonymous review of someone’s code. The reviewer will provide feedback on the tidiness and efficiency of the code they are reviewing. I will provide some examples of helpful and unhelpful feedback, to guide your feedback. It’s easy to be a jerk when making comments; don’t. Think about the comments you would like to receive that would help you improve your code! Be good to each other.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#attention-to-personal-goals",
    "href": "course-materials/course-syllabus.html#attention-to-personal-goals",
    "title": "STAT 331, Fall 2024",
    "section": "4.4 Attention to Personal Goals",
    "text": "4.4 Attention to Personal Goals\nDuring Week 1 of this course, you will be asked to write down at least three measurable things you hope to get out of this class. There is no specific requirement regarding the “size” of the things you write, just that you are able to “measure” your progress toward accomplishing these goals throughout the course. You will hopefully find that some of your goals align with or build off of other aspects of this course!",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-syllabus.html#how-do-you-define-plagiarism-in-a-programming-class",
    "href": "course-materials/course-syllabus.html#how-do-you-define-plagiarism-in-a-programming-class",
    "title": "STAT 331, Fall 2024",
    "section": "12.1 How do you define plagiarism in a programming class?",
    "text": "12.1 How do you define plagiarism in a programming class?\nParaphrasing or quoting another’s work without citing the source is a form of academic misconduct. This included the R code produced by someone else! Writing code is like writing a paper, it is obvious if you copied-and-pasted a sentence from someone else into your paper because the way each person writes is different.\nIn this class the assumed knowledge is the course materials, including the course textbook, coursework pages, and course slides. Any functions / code used outside of these materials require direct references. This includes any functions learned through R documentation for functions we have learned. Meaning, if you look up the help file for mutate() and you learn about a function not covered in the course materials, you are required to cite the documentation when using that function.\nEven inadvertent or unintentional misuse or appropriation of another’s work (such as relying heavily on source material that is not expressly acknowledged) is considered plagiarism. If you use external resources such as Google or ChatGPT, I expect you to indicate this in your assignment.\n\nIf you used Google, you are expected to “inform” me of any resources you used by pasting the link to the resource in a code comment next to where you used that resource.\nIf you used ChatGPT, you are expected to “inform” me of the assistance you received by (1) indicating somewhere in the problem that you used ChatGPT (e.g., below the question prompt or as a code comment), and (2) downloading and attaching the .txt file containing your entire conversation with ChatGPT.\n\nIt is both good professional practice and academic integrity to cite any resources you used during your work. The first incident of failing to cite your resources, will result in a warning. The second incident of failing to cite your resources will result in a 0 on the assignment, meaning you will not be able to include any code from that Lab or Challenge in your Final Portfolio. You will also be reported to the Office of Student Rights and Responsibilities.\nIf you have any questions about using and citing sources, you are expected to ask for clarification.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-materials/course-overview.html",
    "href": "course-materials/course-overview.html",
    "title": "Statistical Computing with R",
    "section": "",
    "text": "Have you ever wondered…\n\n…how are the visualizations you see in the media made?\n…how do people cut down large datasets to address a specific question?\n…how the applet simulations in your statistics classes work? \n\nWe’ll answer these questions and more by studying the principles of “statistical computing” methods in the programming language called R. There is not an expectation that you have seen R before, only that you have some experiences with computing (writing code and executing code). For those who have not seen R before, it is an open-source programming language developed by Statisticians, and is one of the main “languages” you will find people use when doing statistics in the wild.\nIn this course, we will learn the foundational skills for programming in R and a variety of skills for working with data. We will then build on these skills to consider how to write programs which are more efficient.\n\n\n\nArtwork by @allison_horst.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-materials/computing-access.html",
    "href": "course-materials/computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "This course focuses on teaching you to program in R, so you will need to locally install R & RStudio to be able to complete the coursework for this class.",
    "crumbs": [
      "Course information",
      "Access"
    ]
  },
  {
    "objectID": "course-materials/computing-access.html#equipment",
    "href": "course-materials/computing-access.html#equipment",
    "title": "Computing access",
    "section": "Equipment",
    "text": "Equipment\nThe Statistics Studio was recently remodeled and there are no longer desktop computers in the Studio for you to use. There are monitors you can plug a laptop into, but you are required to bring a laptop to class.\n\n\n\n\n\n\nChromebooks and iPads\n\n\n\nThese devices will not be sufficient to use R. If this requirement is limiting for you, please contact me ASAP.",
    "crumbs": [
      "Course information",
      "Access"
    ]
  },
  {
    "objectID": "course-materials/computing-access.html#statistical-software-r-and-rstudio",
    "href": "course-materials/computing-access.html#statistical-software-r-and-rstudio",
    "title": "Computing access",
    "section": "Statistical Software: R and RStudio",
    "text": "Statistical Software: R and RStudio\nWe will (obviously) be using the R statistical software throughout this course. In addition, you are required to use RStudio, a companion integrated developer environment (IDE). Both R and R Studio are freely available.\n\nYou can download the most recent version of R here: https://cran.r-project.org/\nYou can download the most recent version of RStudio here: https://posit.co/download/rstudio-desktop/\n\n\n\n\n\n\n\nFree Quarto Install\n\n\n\nWhen you update / install RStudio, the IDE now automatically installs Quarto. So, you do not need to also install Quarto.",
    "crumbs": [
      "Course information",
      "Access"
    ]
  },
  {
    "objectID": "course-materials/computing-access.html#version-control",
    "href": "course-materials/computing-access.html#version-control",
    "title": "Computing access",
    "section": "Version Control",
    "text": "Version Control\nWe will also be using version control in this course. This requires you to do the following:\n\ninstall Git (https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\ncreate a GitHub account (https://github.com/)",
    "crumbs": [
      "Course information",
      "Access"
    ]
  },
  {
    "objectID": "course-materials/course-support.html",
    "href": "course-materials/course-support.html",
    "title": "Course support",
    "section": "",
    "text": "Most of you will need help at some point and we want to make sure you can identify when that is without getting too frustrated and feel comfortable seeking help.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#lectures-and-labs",
    "href": "course-materials/course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "Lectures and labs",
    "text": "Lectures and labs\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#student-hours",
    "href": "course-materials/course-support.html#student-hours",
    "title": "Course support",
    "section": "Student Hours",
    "text": "Student Hours\nA lot of questions are most effectively answered in-person, and student hours are the best place to come ask me questions! I encourage each and every one of you to take advantage of this resource! Make a pledge to stop by office hours at least once during the first three weeks of class. If you truly have no questions to ask, just stop by and say hi and introduce yourself.\n\n\n\nTuesdays\n2:10 pm – 3:00 pm (in-person)\n\n\nThursdays\n2:10 pm - 3:00 pm (in-person)",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#discord",
    "href": "course-materials/course-support.html#discord",
    "title": "Course support",
    "section": "Discord",
    "text": "Discord\nWe will use Discord to manage questions and responses regarding course content. There are channels for the different components of each week (e.g., Week 1 Lab Assignment). Please do not send an email about homework questions or questions about the course material. It is incredibly helpful for others in the course to see the questions you have and the responses to those questions. I will try to answer any questions posted to Discord within 3-4 hours (unless it is posted at midnight). If you think you can answer another student’s question, please respond!",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#email",
    "href": "course-materials/course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should be posted to Discord), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). For such matters, you may email Dr. Allison Theobold at atheobol@calpoly.edu.\nI do my best to reply to emails promptly and helpfully. However, I receive a lot of emails. To help both you and me, here are some specific expectations about emails:\n\nPlease tell me what course and section (by time or number) you are in!\nIf you email me between 9am and 4pm on Monday through Friday, I’ll try my best to reply to you on the same day.\nIf you email me outside of those hours, I will do my best to respond to you by the next working day. For my own mental health, I do not work on weekends. Thus, if you send an email after 4pm on Friday or during the weekend, you will not receive a response until Monday morning.\nIf your question is much easier to discuss face-to-face, I may ask you to meet with me in my office or on Discord (at a time that works for both of us) rather than answering directly in an email.\nInclude any relevant photos / screenshots / error messages / PDFs / links with your email.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#well-being-access-and-accommodations",
    "href": "course-materials/course-support.html#well-being-access-and-accommodations",
    "title": "Course support",
    "section": "Well-being, Access, and Accommodations",
    "text": "Well-being, Access, and Accommodations\n\nWhat if I have accommodations or feel that accommodations would be beneficial to my learning?\nI enthusiastically support the mission of Disability Resource Center to make education accessible to all. I design all my courses with accessibility at the forefront of my thinking, but if you have any suggestions for ways I can make things more accessible, please let me know. Come talk to me if you need accommodation for your disabilities. I honor self-diagnosis: let’s talk to each other about how we can make the course as accessible as possible. See also the standard syllabus statements, which include more information about formal processes.\n\n\nI’m having difficulty paying for food and rent, what can I do?\nIf you have difficulty affording groceries or accessing sufficient food to eat every day, or if you lack a safe and stable place to live, and you believe this may affect your performance in the course, I urge you to contact the Dean of Students for support. Furthermore, please notify me if you are comfortable in doing so. This will enable me to advocate for you and to connect you with other campus resources.\n\n\nMy mental health is impairing my ability to engage in my classes, what should I do?\nNational surveys of college students have consistently found that stress, sleep problems, anxiety, depression, interpersonal concerns, death of a significant other and alcohol use are among the top ten health impediments to academic performance. If you are experiencing any mental health issues, I and Cal Poly are here to help you. Cal Poly’s Counseling Services (805-756-2511) is a free and confidential resource for assistance, support and advocacy.\n\n\nSomeone is threatening me, what can I do?\nI will listen and believe you if someone is threatening you. I will help you get the help you need. I commit to changing campus culture that responds poorly to dating violence and stalking.\n\n\nWhat if I can’t arrange for childcare?\nIf you are responsible for childcare on short notice, you are welcome to bring children to class with you. If you are a lactating parent, you many take breaks to feed your infant or express milk as needed. If I can support yo in navigating parenting, coursework, and other obligations in any way, please let me know.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#technology-accommodations",
    "href": "course-materials/course-support.html#technology-accommodations",
    "title": "Course support",
    "section": "Technology accommodations",
    "text": "Technology accommodations\nStudents with demonstrated high financial need who have limited access to computers may request assistance in the form of loaner laptops. For technology assistance requests, please go here. Please note that supplies are limited.\nNote that we will be using Duke’s computational resources in this course. These resources are freely available to you. As long as your computer can connect to the internet and open a browser window, you can perform the necessary computing for this course. All software we use is open-source and/or freely available.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-support.html#course-materials-costs",
    "href": "course-materials/course-support.html#course-materials-costs",
    "title": "Course support",
    "section": "Course materials costs",
    "text": "Course materials costs\nThere are no costs associated with this course. All readings will come from freely available, open resources (open-source textbooks, journal articles, etc.).",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-materials/course-team.html",
    "href": "course-materials/course-team.html",
    "title": "Course Instructors",
    "section": "",
    "text": "Dr. Allison Theobold (she / they) is an Assistant Professor of Statistics at Cal Poly in beautiful San Luis Obispo, California. Allison received her doctorate in Statistics, with an emphasis in Statistics Education, from Montana State University. Allison’s work focuses on innovation in statistics and data science education, with an emphasis on equitable pedagogy and learning trajectories. Allison is also interested in exploring pedagogical approaches for enhancing retention of under-represented students in STEM, including creating inclusive discoursive spaces and equitable group collaborations.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDr. Judith Canner (she / her) is a Professor Statistics and Department Chair of the Deparmtent of Mathematics & Statistics at CSU Monterey Bay.",
    "crumbs": [
      "Course information",
      "Teaching team"
    ]
  },
  {
    "objectID": "group-activities/pair-programming-norms.html",
    "href": "group-activities/pair-programming-norms.html",
    "title": "Pair Programming Roles",
    "section": "",
    "text": "During our in-class activities, you will be paired with another student. When completing the activity, you will rotate between the following roles every 2-3 minutes:"
  },
  {
    "objectID": "group-activities/pair-programming-norms.html#group-norms",
    "href": "group-activities/pair-programming-norms.html#group-norms",
    "title": "Pair Programming Roles",
    "section": "Group Norms",
    "text": "Group Norms\n\nThink and work together. Do not divide the work.\nYou are smarter together.\nNo cross-talk with other groups."
  },
  {
    "objectID": "group-activities/pair-programming-norms.html#completing-the-task",
    "href": "group-activities/pair-programming-norms.html#completing-the-task",
    "title": "Pair Programming Roles",
    "section": "Completing the Task",
    "text": "Completing the Task\nWorking with your partner, complete the Practice Activity in the Quarto document provided. In your roles—Listener and Problem Solver—use the prompts below to help guide the completion of your activity.\n\n\nProblem Solver\nI am looking for…\nI am confused by…\nI notice…\nWhat might be true is…\nWhat’s important is…\nI predict…\nThis reminds me of…\nI could try…\nI am thinking about…\nA line of code I could write is…\n\n\n\nListener\nWhat are you focusing on? What are you thinking now? Could you tell me more? What are you doing (or writing) now? Please elaborate.\nI can’t follow that, run that by me again."
  },
  {
    "objectID": "group-activities/pair-programming-norms.html#once-youre-finished",
    "href": "group-activities/pair-programming-norms.html#once-youre-finished",
    "title": "Pair Programming Roles",
    "section": "Once You’re Finished",
    "text": "Once You’re Finished\nAt the end of the task, your group will have one completed Quarto document and one rendered HTML, containing your groups’ worked-out solutions and justifications. Everyone must take turns writing the final product (as described above) and everyone must be able to explain every line of code in your final document."
  },
  {
    "objectID": "group-activities/week-1/broken-circles.html",
    "href": "group-activities/week-1/broken-circles.html",
    "title": "Broken Circles",
    "section": "",
    "text": "This activity is designed to explore how working in groups can be more or less successful."
  },
  {
    "objectID": "group-activities/week-1/broken-circles.html#instructions",
    "href": "group-activities/week-1/broken-circles.html#instructions",
    "title": "Broken Circles",
    "section": "Instructions",
    "text": "Instructions\nThe class will divide into groups of four (4) students. Each of you will be given an envelope with 2-3 pieces of a circle. The goal of this exercise is to put these pieces together in such a way that each member of your group ends up with a complete circle. However, there are a few additional rules to keep things fun:\n\nThis exercise must be done in complete silence. No talking is permitted.\nYou may not point or signal to other players with your hands in any way.\nEach player must put together their own circle. No one else may show a player how to assemble their circle or do it for them.\nThis is an exercise in giving. You may not take a piece from another player, but you may give your pieces—one at a time—to any other member of your group, and members of your group may give pieces to you. As per the previous rule, you may not place a piece in another person’s puzzle; players must complete their own puzzle. Instead, you are expected to hand the piece to the other player."
  },
  {
    "objectID": "group-activities/week-1/broken-circles.html#getting-started",
    "href": "group-activities/week-1/broken-circles.html#getting-started",
    "title": "Broken Circles",
    "section": "Getting Started",
    "text": "Getting Started\nNow that you know the rules, let’s get started! Take the pieces out of your envelope and place them in front of you. Remember, this is a group task. The activity is not completed until everyone in your group has a completed circle in front of them.\nYou have 10-minutes to make your circles. When your group has finished, raise your hand. If you have time remaining, I may ask you to find another way to put the pieces together to form different circles."
  },
  {
    "objectID": "group-activities/week-1/broken-circles.html#discussion",
    "href": "group-activities/week-1/broken-circles.html#discussion",
    "title": "Broken Circles",
    "section": "Discussion",
    "text": "Discussion\n\nWhat do you think this game was about? What was its purpose?\nWhat did your group did that made you cooperate more successfully?\nWhat did your group did that made cooperation harder?\nWhat are some behaviors that could be implemented in the future to make cooperation easier?"
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html",
    "href": "group-activities/week-2/PA2-ggplot.html",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "",
    "text": "Today you will be exploring different types of visualizations to uncover which species of penguins reside on different islands.\nThis task is complex. It requires many different types of abilities. Everyone will be good at some of these abilities but nobody will be good at all of them. In order to produce the best product possible, you will need to use the skills of each member of your group.\nSome advice:"
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#groupwork-protocols",
    "href": "group-activities/week-2/PA2-ggplot.html#groupwork-protocols",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Groupwork Protocols",
    "text": "Groupwork Protocols\nInsert blurb on how students are expected to collaborate."
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-1-install-the-palmerpenguins-package",
    "href": "group-activities/week-2/PA2-ggplot.html#step-1-install-the-palmerpenguins-package",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 1: Install the palmerpenguins Package",
    "text": "Step 1: Install the palmerpenguins Package\nWe will be creating visualizations using the ggplot2 package.\nFor this activity, we will be exploring the penguins data from the palmerpenguins package, which has fantastic documentation with really awesome artwork. So, you will need to install the palmerpenguins package. Run the following code in your console:\ninstall.packages(\"palmerpenguins\")"
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-2-create-a-set-up-code-chunk",
    "href": "group-activities/week-2/PA2-ggplot.html#step-2-create-a-set-up-code-chunk",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 2: Create a Set-up Code Chunk",
    "text": "Step 2: Create a Set-up Code Chunk\n\nLocate the code chunk at the beginning of your document (directly under the YAML).\nName the code chunk setup (with the hashpipe #|)\nSpecify the code chunk options (with the hashpipe #|) that the messages from loading in the packages should not be included.\nLoad in the tidyverse or ggplot2 package.\nLoad in the palmerpenguins package."
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-3-accessing-the-penguins-dataset",
    "href": "group-activities/week-2/PA2-ggplot.html#step-3-accessing-the-penguins-dataset",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 3: Accessing the penguins Dataset",
    "text": "Step 3: Accessing the penguins Dataset\nI like to tangibly see the data set I will be working with so let’s pull the penguins data into the R environment. Run the code below and you should see the penguins data appear in the top right Environment tab.\n\ndata(penguins)\n\nWarning in data(penguins): data set 'penguins' not found"
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-4-get-to-know-the-data",
    "href": "group-activities/week-2/PA2-ggplot.html#step-4-get-to-know-the-data",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 4: Get to Know the Data",
    "text": "Step 4: Get to Know the Data\n\n\nWhat variables are included in these data? What units are the variables measured in? What does each row represent?"
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-5-barchart",
    "href": "group-activities/week-2/PA2-ggplot.html#step-5-barchart",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 5: Barchart",
    "text": "Step 5: Barchart\nUse ggplot2 to draw a barchart of different species included in the dataset."
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-6-scatterplot",
    "href": "group-activities/week-2/PA2-ggplot.html#step-6-scatterplot",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 6: Scatterplot",
    "text": "Step 6: Scatterplot\nUse ggplot2 to create a scatterplot of the relationship between the bill length (bill_length_mm) and bill depth (bill_depth_mm)."
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-7-adding-a-categorical-variable",
    "href": "group-activities/week-2/PA2-ggplot.html#step-7-adding-a-categorical-variable",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 7: Adding A Categorical Variable",
    "text": "Step 7: Adding A Categorical Variable\n\nBuilding off of the plot you made in Step 6, add an aesthetic to differentiate the species of the penguins in the scatterplot by color."
  },
  {
    "objectID": "group-activities/week-2/PA2-ggplot.html#step-8-adding-another-categorical-variable",
    "href": "group-activities/week-2/PA2-ggplot.html#step-8-adding-another-categorical-variable",
    "title": "PA 2: Using Data Visualization to Find the Penguins",
    "section": "Step 8: Adding Another Categorical Variable",
    "text": "Step 8: Adding Another Categorical Variable\n\nBuilding off of the plot you made in Step 7, add the location of the penguins ( island) to your visualization. There may be more than one method to address this, however, one method will more easily allow you to address the questions below."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistical Computing in R",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the quarter. Note that this schedule will be updated as the quarter progresses, with all changes documented here.\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek\nDate\nTopic & Preview Activities\nLecture Slides\nPractice Activity\nLab & Challenge\nPortfolio\n\n\n\n\n0\nMon, 9/23\nCourse Set-up\n\n\n\n\n\n\n1\nTues, 9/24\nIntro to R & RStudio\nIntro to Quarto\nWelcome to STAT 331 & Intro to R\nBroken Circles Group Warm-up\nData Cleaning, Visualization Puzzle\n\n\n\n\n\nThurs, 9/26\nIntro to Version Control\nIntro to Quarto & Version Control\n\nLab 1 & Challenge 1  (due 9/29)\n\n\n\n2\nTuesday, 10/1\nData Visualization with ggplot2\nData Import & R Projects\n\nExpert Designer Group Warm-up\n\n\n\n\n\nThurs, 10/3\n\n\n\nLab 2 Instructions & Challenge 2 Instructions  (due 10/6)\n\n\n\n3\nTues, 10/8\nData Wrangling with dplyr\n\n\n\n\n\n\n\nThurs, 10/10\n\n\n\nLab 3 & Challenge 3  (due 10/13)\n\n\n\n4\nTues, 10/15\nData Organization & Relational Data with tidyr\n\n\n\n\n\n\n\nThurs, 10/17\n\n\n\nLab 4 & Challenge 4  (due 10/20)\n\n\n\n5\nTues, 10/22\nWorking with Strings\n\n\n\n\n\n\n\nThurs, 10/24\nWorking with Dates\n\n\nLab 5 & Challenge 5  (due 10/27)\n\n\n\n6\nTues, 10/29\nWriting your own simple (vector) functions\n\n\n\n\n\n\n\nThurs, 10/31\nPortfolio Party\n\n\n\nWeek 6 Reflections & Midterm Portfolio  (due 11/3)\n\n\n7\nTues, 11/5\nWriting your own dataframe functions\n\n\n\n\n\n\n\nThurs, 11/7\n\n\n\nLab 7 & Challenge 7  (due 11/10)\n\n\n\n8\nTues, 11/12\nIntroduction to Iteration\n\n\n\n\n\n\n\nThurs, 11/14\n\n\n\nLab 8 & Challenge 8  (due 11/17)\n\n\n\n9\nTues, 11/19\nWebscraping\n\n\n\n\n\n\n\nThurs, 11/21\n\n\n\nLab 9 & Challenge 9  (due 11/24)\n\n\n\n10\nFall Break\n\n\n\n\n\n\n\n11\nTues, 12/3\nDistributions & Simulation\n\n\n\n\n\n\n\nThurs, 12/5\nPortfolio Party\n\n\n\n\n\n\n\nSat, 12/7\n\n\n\n\nFinal Portfolio Due\n\n\nFinals Week\nMon, 12/9, 10:10am - 1pm\n10-minute Portfolio Conferences",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html",
    "href": "labs/instructions/lab-1-instructions.html",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "For the first few weeks of the quarter, we will use GitHub Classroom to create our lab repositories. GitHub Classroom is a wonderful tool, as it makes it incredibly simple to copy the contents of a repository.\nUse these 11 steps to make a copy of the Lab 1 repository: List of Steps to Copy the Lab Assignment from GitHub Classroom\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOnce you complete these steps, a dialogue box will open with messages about cloning (making a copy) of your Lab 1 repository. When the messages are finished, you should have a new RStudio session open. You should notice a few things:\n\nIn the upper right corner you should see a blue R cube with introdcution-to-quarto written next to it , this tells you that you are working in an R Project (we’ll learn more about these next week).\nIn the “Files” pane, you should see a list of all the files included in the lab-1 repository you copied.\nIn the upper right pane, you should see a tab labeled “Git”.\nEvery file included in the repository should be listed with a question mark symbol next to it, that’s okay! This just means these files are not currently being tracked.\n\n\n\n\nNow for our last step, we need to commit the files to our repo.\n\nClick the “Git” tab in upper right pane\nCheck the “Staged” box for every file listed\nClick “Commit”\nIn the box that opens, type a message in “Commit message”, such as “Initialize lab 1”.\nClick “Commit”.\nClick the green “Push” button to send your local changes to GitHub.\n\nRStudio will display something like:\n&gt;&gt;&gt; /usr/bin/git push origin HEAD:refs/heads/main\nTo https://github.com/atheobold/introduction-to-quarto-allison-theobold.git\n   3a2171f..6d58539  HEAD -&gt; main\n\n\n\nGo back to your browser. I assume you’re still viewing the GitHub repo you just cloned. Refresh the page. You should see all the project files you committed there. If you click on “commits”, you should see one with the message you used, e.g. “Initialize lab 1”.\n\n\n\nIn the Files pane, click on lab-1-student.qmd to open the Quarto file you will be working in for Lab 1.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#step-1-making-a-copy-from-github-classroom",
    "href": "labs/instructions/lab-1-instructions.html#step-1-making-a-copy-from-github-classroom",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "For the first few weeks of the quarter, we will use GitHub Classroom to create our lab repositories. GitHub Classroom is a wonderful tool, as it makes it incredibly simple to copy the contents of a repository.\nUse these 11 steps to make a copy of the Lab 1 repository: List of Steps to Copy the Lab Assignment from GitHub Classroom",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#step-2-inspecting-the-lab",
    "href": "labs/instructions/lab-1-instructions.html#step-2-inspecting-the-lab",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "Once you complete these steps, a dialogue box will open with messages about cloning (making a copy) of your Lab 1 repository. When the messages are finished, you should have a new RStudio session open. You should notice a few things:\n\nIn the upper right corner you should see a blue R cube with introdcution-to-quarto written next to it , this tells you that you are working in an R Project (we’ll learn more about these next week).\nIn the “Files” pane, you should see a list of all the files included in the lab-1 repository you copied.\nIn the upper right pane, you should see a tab labeled “Git”.\nEvery file included in the repository should be listed with a question mark symbol next to it, that’s okay! This just means these files are not currently being tracked.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#step-3-pushing-your-lab-to-github",
    "href": "labs/instructions/lab-1-instructions.html#step-3-pushing-your-lab-to-github",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "Now for our last step, we need to commit the files to our repo.\n\nClick the “Git” tab in upper right pane\nCheck the “Staged” box for every file listed\nClick “Commit”\nIn the box that opens, type a message in “Commit message”, such as “Initialize lab 1”.\nClick “Commit”.\nClick the green “Push” button to send your local changes to GitHub.\n\nRStudio will display something like:\n&gt;&gt;&gt; /usr/bin/git push origin HEAD:refs/heads/main\nTo https://github.com/atheobold/introduction-to-quarto-allison-theobold.git\n   3a2171f..6d58539  HEAD -&gt; main",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#step-4-verifying-your-changes",
    "href": "labs/instructions/lab-1-instructions.html#step-4-verifying-your-changes",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "Go back to your browser. I assume you’re still viewing the GitHub repo you just cloned. Refresh the page. You should see all the project files you committed there. If you click on “commits”, you should see one with the message you used, e.g. “Initialize lab 1”.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#step-5-lets-get-started-working-with-quarto",
    "href": "labs/instructions/lab-1-instructions.html#step-5-lets-get-started-working-with-quarto",
    "title": "Lab 1: Introduction to Quarto",
    "section": "",
    "text": "In the Files pane, click on lab-1-student.qmd to open the Quarto file you will be working in for Lab 1.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#specifying-global-execute-options",
    "href": "labs/instructions/lab-1-instructions.html#specifying-global-execute-options",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.1 Specifying Global Execute Options",
    "text": "2.1 Specifying Global Execute Options\nExecution options specify how the R code in your Quarto document should be displayed. This guide provides descriptions on the options you can specify in a document’s execution.\nTo start, your YAML should look something like this:\n---\ntitle: \"Lab 1: Introduction to Quarto\"\nauthor: \"Your name goes here!\"\ndate: \"Insert the date here!\"\nformat: html\nself-contained: true\neditor: source\n---\nQuestion 1 – Add your name and the date to the YAML.\nQuestion 2 – Add an execute line to your YAML that includes the following options, (1) your source code is always output on the page, and (2) your document will render even if there are errors.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#running-the-provided-code",
    "href": "labs/instructions/lab-1-instructions.html#running-the-provided-code",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.2 Running the Provided Code",
    "text": "2.2 Running the Provided Code\nNext, click on the “Play” button on the right of the first auto-populated code chunk. Alternatively, you can highlight (or simply put your cursor on the line of) the code you want to run and hit ctrl + Enter (for PCs) or ⌘ + Enter (for Macs).\nYou should see the code appear in the console, as well as the result of the code (2). Keep in mind the [1] before the 2 is vector notation. This means the result is a vector of length 1, whose first element is 2.\nQuestion 3 – Let’s spice this code up a bit. Delete 1 + 1 from the code chunk and paste in the following code:\n\n# Load a dataset into the R Environment.\ndata(ToothGrowth)\n\n# Look at the summary of the variables in the dataset.\nsummary(ToothGrowth)\n\nNow run this code. You should see a six-number summary of the variables len and dose included in the ToothGrowth dataset, as well as the frequency of the levels contained in the supp variable. Further, if you inspect the Environment tab, the ToothGrowth dataset should appear. You can click on the dataset name (not the blue play button!) to look at the data.\n\nCheck the Data Documentation\nQuestion 4 – In your console (not in the Quarto document), type ?ToothGrowth (or alternatively help(ToothGrowth)). Use the information that pops up in the Help pane in RStudio to fill in the blanks below.\nThis dataset investigates the effect of __________ on tooth growth in _________________.\nThe two supplement delivery methods include OJ (______________) and VC (_______________).\nToothGrowth is a data frame with ____ observations and ____ variables.\nQuestion 5 – Before the code chunk, change the “Running the Provided Code” section header to a header that better describes the contents of this section (e.g., Tooth Growth Dataset).",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#creating-a-plot",
    "href": "labs/instructions/lab-1-instructions.html#creating-a-plot",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.3 Creating a Plot",
    "text": "2.3 Creating a Plot\nYour second code chunk is just as boring as your first, so let’s spice it up!\nQuestion 6 – Replace the plot(pressure) code with the following (we will talk about graphics next week!):\n\nlibrary(tidyverse)\n\nggplot(data = ToothGrowth, \n       mapping = aes(x = supp, y = len)) +\n  geom_boxplot() +\n  labs(x = \"Supplement\", y = \"Length of Teeth (mm)\")\n\nToothGrowth %&gt;% \n  mutate(dose = as.factor(dose)) %&gt;% \n  ggplot(mapping = aes(x = dose, y = len)) +\n  geom_boxplot() +\n  labs(x = \"Dose of Supplement (mg/day)\", y = \"Length of Teeth (mm)\")\n\nNow, run this code chunk! You should see two side-by-side boxplots, one plot comparing tooth length between the two supplement delivery methods and one plot comparing tooth length between the three different dosages uses.\nQuestion 7 – Read over the Quarto documentation on figure options and add an option (#|) to the above code chunk to make the figures print side-by-side (i.e., in one row) in the rendered HTML file.\nQuestion 8 – Specify in the code chunk options that these boxplots should be center aligned.\nQuestion 9 – Specify a figure caption for the boxplots (using a code-chunk option).",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#inserting-a-new-code-chunk",
    "href": "labs/instructions/lab-1-instructions.html#inserting-a-new-code-chunk",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.4 Inserting a New Code Chunk",
    "text": "2.4 Inserting a New Code Chunk\nNavigate to the last sentence of your the Quarto document. We’re now going to insert a new R code chunk at the bottom of the document.\nThere are four different ways to do this:\n\nType ctrl + alt + i (on a PC) or ⌘ + ⌥ + i (on a Mac).\nClick on the  symbol. This should automatically default to R code, but if you have a Python compiler on your computer, you might need to select “R” from the options.\nIf you are using the Visual editor, click on the “Insert” button, then select “Code Chunk”, and finally select “R”.\nManually add the code chunk by typing ```{r}. Make sure to close your code chunk with ```.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#conducting-a-t-test-for-two-independent-samples",
    "href": "labs/instructions/lab-1-instructions.html#conducting-a-t-test-for-two-independent-samples",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.5 Conducting a t-test for Two Independent Samples",
    "text": "2.5 Conducting a t-test for Two Independent Samples\nIn this section, we are going to conduct a two-sample independent t-test to compare tooth length between the two supplement methods in the ToothGrowth dataset. I have outlined the null and alternative hypotheses we will be testing:\n\\(H_0\\): The treatment mean tooth length for the OJ supplement delivery method is the same as the treatment mean tooth length for the VC supplement delivery method.\n\\(H_A\\): The treatment mean tooth length for the OJ supplement delivery method is different from the treatment mean tooth length for the VC supplement delivery method.\nWhile a second course in statistics is a pre-requisite for this class, you may want to go here for a refresher on conducting two-sample independent t-tests.\nCarry out the following steps:\nQuestion 10 – Using the t.test() function, write code to carry out the analysis. You can assume unequal variances and a two-sided alternative.\n\n\n\n\n\n\nFunction Documentation\n\n\n\nLook up the help documentation for t.test() for directions on how your inputs should look. Hint: specifically look at the examples at the bottom for comparing extra across groups in the sleep dataset.\n\n\nQuestion 11 – Run your code chunk to obtain the output for your statistical test.\nQuestion 12 – Create a numbered list containing:\n\nYour conclusion (in the context of these data) based on the p-value.\nAn interpretation of the confidence interval (make sure to read what confidence level is used by default).\n\nQuestion 13 – Create another section header, describing the contents of this section.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#render-your-document",
    "href": "labs/instructions/lab-1-instructions.html#render-your-document",
    "title": "Lab 1: Introduction to Quarto",
    "section": "2.6 Render Your Document",
    "text": "2.6 Render Your Document\nRender your document as an html file. Use the “Render” button (the blue arrow!) at the top of your screen.\nIf you run into trouble rendering your document, try restarting R and running your code chunks in order, and see if you can find the problem.\nAnother common issue is deleting the tick marks (```) that surround your code chunks. If you notice that the code chunks are not showing a “Play” button (), or that they are not highlighted in gray, double check your tick marks!\nRecall we included error: true in our YAML execution options. This means that your document will still render even if there are errors. Make sure you are double checking your work!\nYou will notice that there is auto-generated text that is unrelated to the work that you completed. It is always a good idea to delete this extra text!",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#render-again",
    "href": "labs/instructions/lab-1-instructions.html#render-again",
    "title": "Lab 1: Introduction to Quarto",
    "section": "3.1 Render again!",
    "text": "3.1 Render again!\nNotice that when you render the document, all of the code reruns again, producing the same output as before, but with your changes—this is called reproducibility!\nYou should render often while completing your practice activities and lab assignments. Make small changes, then make sure the file still renders rather than making a bunch of big changes and then realizing something is wrong.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/instructions/lab-1-instructions.html#turn-it-in",
    "href": "labs/instructions/lab-1-instructions.html#turn-it-in",
    "title": "Lab 1: Introduction to Quarto",
    "section": "3.2 Turn it in!",
    "text": "3.2 Turn it in!\nOpen the .html file on your computer to make sure it looks as you expected. Then upload the rendered (.html extension) document to Canvas!\n\nYou’ll be doing this same process for all your future Lab Assignments. Each of these will involve a Quarto file. Some weeks, I may have a template for you to copy like you had here, while other weeks you will generate your own Quarto file from scratch.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#tuesday-september-24",
    "href": "slides/week-1/week-1-intro-R.html#tuesday-september-24",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Tuesday, September 24",
    "text": "Tuesday, September 24\nToday we will…\n\nWelcome to Stat 331 / 531: Statistical Computing in R\nIntroductions (Me + You)\nCourse Layout\nBasics of R\nGroup collaboration warm-up\nData wrangling / visualization puzzle"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#hi-im-dr.-theobold",
    "href": "slides/week-1/week-1-intro-R.html#hi-im-dr.-theobold",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Hi, I’m Dr. Theobold!",
    "text": "Hi, I’m Dr. Theobold!\n\n\n\n\nI am originally from Colorado, but went to grad school in Montana.\nMy favorite things are being outside, drinking coffee, and watching women’s basketball.\n\n\n\n\n\n\n\n\n\n\n\n\n\nI love cats!\nI’ve been programming in R since 2014!\nI absolutely love teaching this course!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#on-a-personal-note",
    "href": "slides/week-1/week-1-intro-R.html#on-a-personal-note",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "On a personal note…",
    "text": "On a personal note…\n\n\nI prefer you refer to me as “Dr. Theobold” or “Dr. T.”\nPlease don’t call me “Allison” or “Professor.”\n\n\nI use they / them pronouns. If you are not sure what this means, I’d encourage you to read more about gender identity and pronouns. 🙂"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#our-classroom-learning-assistant",
    "href": "slides/week-1/week-1-intro-R.html#our-classroom-learning-assistant",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Our Classroom Learning Assistant!",
    "text": "Our Classroom Learning Assistant!\nWe will be joined in class by Jasmine.\n\nJasmine is…\n\nA forth-year Statistics major pursuing a Data Science minor."
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#you",
    "href": "slides/week-1/week-1-intro-R.html#you",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "You!",
    "text": "You!\nI am looking forward to reading your introductions on Discord!\n\nPlease read the intros of your classmates so you can discover who you will be learning with this quarter!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#beginning-of-the-week",
    "href": "slides/week-1/week-1-intro-R.html#beginning-of-the-week",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Beginning of the Week",
    "text": "Beginning of the Week\n\nBefore Tuesday’s ClassDuring Class on TuesdayAfter Tuesday’s Class\n\n\n\nLook over the coursework page\nRead the required chapter(s)\nWatch the required video(s)\nComplete the Preview Activities\n\n\n\n\nReview chapter content\nAsk clarifying questions\nDiscuss example analyses\nWork in pairs to complete the Practice Activity\n\n\n\n\nFinish whatever remains of the Practice Activity\nComplete any additional reading / videos / Preview Activities"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#end-of-the-week",
    "href": "slides/week-1/week-1-intro-R.html#end-of-the-week",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "End of the Week",
    "text": "End of the Week\n\nDuring Class on ThursdayAfter Thursday’s Class\n\n\n\nDebrief Practice Activity\nWarm-up review\nStart Lab Assignment\n\n\n\n\nFinish remaining problems of the Lab Assignment\nComplete Challenge Assignment\n\n\n\n\n\n\n\nLabs & Challenges Due Sunday by Midnight\n\n\nTo keep everyone on track with the coursework, your Lab and Challenges are due by midnight every Sunday. You are permitted to request up to four (4) deadline extensions by filling out the deadline extension form."
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#data-types",
    "href": "slides/week-1/week-1-intro-R.html#data-types",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Data Types",
    "text": "Data Types\n\nA value is a basic unit of stuff that a program works with.\nValues are allowed to have different data types:\n\n\n\nlogical / boolean: FALSE / TRUE or 0 / 1 values.\n\n\n\n\ninteger: whole numbers.\n\n\n\n\ndouble / float / numeric: decimal numbers.\n\n\n\n\ncharacter / string - text values."
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#variables",
    "href": "slides/week-1/week-1-intro-R.html#variables",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Variables",
    "text": "Variables\n\nare names that refer to values.\n\n\n\n\nA variable is like a container that holds something - when you refer to the container, you get whatever is stored inside.\nWe assign values to variables using the syntax object_name &lt;- value.\n\nThis can be read as “object name gets value.”\n\n\n\n\n\n\nmessage &lt;- \"So long and thanks for all the fish\"\nyear &lt;- 2025\nthe_answer &lt;- 42.5\nearth_demolished &lt;- FALSE"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#data-structures",
    "href": "slides/week-1/week-1-intro-R.html#data-structures",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Data Structures",
    "text": "Data Structures\n\nHomogeneousHeterogeneous\n\n\n\nevery element has the same data type\n\n\nVector: a one-dimensional column of homogeneous data.\nMatrix: the next step after a vector - it’s a set of homogenous data arranged in a two-dimensional, rectangular format.\n\n\n\n\nelements can be of different types\n\n\nList: a one-dimensional column of heterogeneous data1.\nDataframe: a two-dimensional set of heterogeneous data arranged in a rectangular format.\n\n\n\n\nThis is similar to a dictionary in Python!"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#indexing",
    "href": "slides/week-1/week-1-intro-R.html#indexing",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Indexing",
    "text": "Indexing\nWe use square brackets ([]) to access elements within data structures.\n\nIn R, we start indexing from 1.\n\n\nVectorMatrixListDataframe\n\n\n\nvec[4]    # 4th element\nvec[1:3]  # first 3 elements\n\n\n\n\nmat[2, 6]  # element in row 2, col 6\nmat[ , 3]   # all elements in col 3\n\n\n\n\nli[[5]]    # 5th element\nli$elementName # all elements in \"elementName\"\n\n\n\n\ndf[1, 2]     # element in row 1, col 2\ndf[17, ]     # all elements in row 17\ndf$colName  # all elements in the col named \"colName\""
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#logic",
    "href": "slides/week-1/week-1-intro-R.html#logic",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Logic",
    "text": "Logic\nWe can combine logical statements using and, or, and not.\n\n(X AND Y) requires that both X and Y are true.\n(X OR Y) requires that one of X or Y is true.\n(NOT X) is true if X is false, and false if X is true.\n\n\n\nx &lt;- c(TRUE, FALSE, TRUE, FALSE)\ny &lt;- c(TRUE, TRUE, FALSE, FALSE)\n\n\nAndOrNot\n\n\n\nx & y\n\n[1]  TRUE FALSE FALSE FALSE\n\n\n\n\n\nx | y\n\n[1]  TRUE  TRUE  TRUE FALSE\n\n\n\n\n\n!x\n\n[1] FALSE  TRUE FALSE  TRUE"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#broken-circles",
    "href": "slides/week-1/week-1-intro-R.html#broken-circles",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Broken Circles",
    "text": "Broken Circles\n\n\n\nTo set the stage for your future group collaborations, we will complete an activity that explores how working in groups can be more / less successful.\nLet’s start by dividing the class into groups of 3-4 students."
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#discussion",
    "href": "slides/week-1/week-1-intro-R.html#discussion",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "Discussion",
    "text": "Discussion\n\nWhat do you think this game was about? What was its purpose?\nWhat did your group did that made you cooperate more successfully?\nWhat did your group did that made cooperation harder?\nWhat are some behaviors that could be implemented in the future to make cooperation easier?"
  },
  {
    "objectID": "slides/week-1/week-1-intro-R.html#section",
    "href": "slides/week-1/week-1-intro-R.html#section",
    "title": "Intro to STAT 331 / 531 + Intro to R",
    "section": "",
    "text": "Complete Version Control coursework\nCheck-ins 1.3 & 1.4\n\nDue Thursday (9/26) by the start of class\n\nIntroduce yourself on Discord!\n\nDue by the end of the week\n\nPA 1: Find the Mistakes\n\nDue Wednesday (9/25) by 5pm"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#did-you-leave-off-a-parenthesis",
    "href": "videos/week-1/debugging-errors.html#did-you-leave-off-a-parenthesis",
    "title": "Debugging Errors!",
    "section": "Did you leave off a parenthesis?",
    "text": "Did you leave off a parenthesis?\nseq(from = 1, to = 10, by = 1\n\nseq(from = 1, to = 10, by = 1\n\nError: &lt;text&gt;:2:0: unexpected end of input\n1: seq(from = 1, to = 10, by = 1\n   ^\n\n\n\n\nseq(from = 1, to = 10, by = 1)\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#did-you-leave-off-a-comma",
    "href": "videos/week-1/debugging-errors.html#did-you-leave-off-a-comma",
    "title": "Debugging Errors!",
    "section": "Did you leave off a comma?",
    "text": "Did you leave off a comma?\nseq(from = 1, to = 10 by = 1)\n\nseq(from = 1, to = 10 by = 1)\n\nError: &lt;text&gt;:1:23: unexpected symbol\n1: seq(from = 1, to = 10 by\n                          ^\n\n\n\n\nseq(from = 1, to = 10, by = 1)\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#did-you-make-a-typo-are-you-using-the-right-names",
    "href": "videos/week-1/debugging-errors.html#did-you-make-a-typo-are-you-using-the-right-names",
    "title": "Debugging Errors!",
    "section": "Did you make a typo? Are you using the right names?",
    "text": "Did you make a typo? Are you using the right names?\nsequence(from = 1, to = 10, by = 1)\n\nsequence(from = 1, to = 10, by = 1)\n\nError in sequence.default(from = 1, to = 10, by = 1): argument \"nvec\" is missing, with no default\n\n\n\n\nseq(from = 1, to = 10, by = 1)\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#are-you-using-the-right-input-that-the-function-expects",
    "href": "videos/week-1/debugging-errors.html#are-you-using-the-right-input-that-the-function-expects",
    "title": "Debugging Errors!",
    "section": "Are you using the right input that the function expects?",
    "text": "Are you using the right input that the function expects?\nsqrt(‘1’)\n\nsqrt('1')\n\nError in sqrt(\"1\"): non-numeric argument to mathematical function\n\n\n\n\nsqrt(1)\n\n[1] 1"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#are-you-expecting-the-right-output-of-the-function",
    "href": "videos/week-1/debugging-errors.html#are-you-expecting-the-right-output-of-the-function",
    "title": "Debugging Errors!",
    "section": "Are you expecting the right output of the function?",
    "text": "Are you expecting the right output of the function?\n\nmy_obj &lt;- seq(from = 1, to = 10, by = 1)\n\nmy_obj(5)\n\nError in my_obj(5): could not find function \"my_obj\"\n\n\n\n\nmy_obj[5]\n\n[1] 5"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#messages",
    "href": "videos/week-1/debugging-errors.html#messages",
    "title": "Debugging Errors!",
    "section": "Messages",
    "text": "Messages\nJust because you see scary red text, this does not mean something went wrong! This is just R communicating with you.\n\n\nFor example, you will often see:\n\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'Matrix'\n\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#warnings",
    "href": "videos/week-1/debugging-errors.html#warnings",
    "title": "Debugging Errors!",
    "section": "Warnings",
    "text": "Warnings\nOften, R will give you a warning.\n\nThis means that your code did run…\n…but you probably want to make sure it succeeded.\n\n\nDoes this look right?\n\nmy_vec &lt;- c(\"a\", \"b\", \"c\")\n\nmy_new_vec &lt;- as.integer(my_vec)\n\nWarning: NAs introduced by coercion\n\n\n\n\n\nmy_new_vec\n\n[1] NA NA NA"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#errors",
    "href": "videos/week-1/debugging-errors.html#errors",
    "title": "Debugging Errors!",
    "section": "Errors",
    "text": "Errors\nIf the word Error appears in your message from R, then you have a problem.\n\nThis means your code could not run!\n\n\n\nmy_vec &lt;- c(\"a\", \"b\", \"c\")\n\nmy_new_vec &lt;- my_vec + 1\n\nError in my_vec + 1: non-numeric argument to binary operator"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#r-says",
    "href": "videos/week-1/debugging-errors.html#r-says",
    "title": "Debugging Errors!",
    "section": "R says…",
    "text": "R says…\n\nError: Object some_obj not found.\n\n\nIt probably means…\n\nYou haven’t run the code to create some_obj OR you have a typo in the name!\n\n\nsome_ojb &lt;- 1:10\n\nmean(some_obj)\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'mean': object 'some_obj' not found"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#r-says-1",
    "href": "videos/week-1/debugging-errors.html#r-says-1",
    "title": "Debugging Errors!",
    "section": "R says…",
    "text": "R says…\n\nError: Object of type ‘closure’ is not subsettable.\n\n\nIt probably means…\n\nOops, you tried to use square brackets on a function\n\n\nmean[1, 2]\n\nError in mean[1, 2]: object of type 'closure' is not subsettable"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#r-says-2",
    "href": "videos/week-1/debugging-errors.html#r-says-2",
    "title": "Debugging Errors!",
    "section": "R says…",
    "text": "R says…\n\nError: Non-numeric argument to binary operator.\n\n\nIt probably means…\n\nYou tried to do math on data that isn’t numeric.\n\n\n\"a\" + 2\n\nError in \"a\" + 2: non-numeric argument to binary operator"
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#what-if-none-of-these-solved-my-error",
    "href": "videos/week-1/debugging-errors.html#what-if-none-of-these-solved-my-error",
    "title": "Debugging Errors!",
    "section": "What if none of these solved my error?",
    "text": "What if none of these solved my error?\n\nLook at the help file for the function!\nWhen all else fails, Google your error message.\n\n\nLeave out the specifics.\nInclude the function you are using."
  },
  {
    "objectID": "videos/week-1/debugging-errors.html#try-it",
    "href": "videos/week-1/debugging-errors.html#try-it",
    "title": "Debugging Errors!",
    "section": "Try it…",
    "text": "Try it…\nWhat’s wrong here?\n\nmatrix(c(\"a\", \"b\", \"c\", \"d\"), num_row = 2)\n\nError in matrix(c(\"a\", \"b\", \"c\", \"d\"), num_row = 2): unused argument (num_row = 2)"
  },
  {
    "objectID": "videos/week-2/r-projects.html#the-beauty-of-r-projects",
    "href": "videos/week-2/r-projects.html#the-beauty-of-r-projects",
    "title": "R Projects",
    "section": "The Beauty of R Projects",
    "text": "The Beauty of R Projects\n\nAn R Project is basically a “flag” planted in a certain directory.\nWhen you double click an .Rproj file, it:\n\n\n\n\nOpens RStudio\nSets the working directory to be wherever the .Rproj file lives.\nLinks to GitHub, if set up (more on that later!)"
  },
  {
    "objectID": "videos/week-2/r-projects.html#r-projects-reproducibility",
    "href": "videos/week-2/r-projects.html#r-projects-reproducibility",
    "title": "R Projects",
    "section": "R Projects & Reproducibility",
    "text": "R Projects & Reproducibility\nRStudio Projects are great for reproducibility!\nYou can send anyone your folder with your .Rproj file and they will be able to run your code on their computer!"
  },
  {
    "objectID": "videos/week-2/r-projects.html#principles-of-reproducibility",
    "href": "videos/week-2/r-projects.html#principles-of-reproducibility",
    "title": "R Projects",
    "section": "Principles of Reproducibility",
    "text": "Principles of Reproducibility\nYou can to send your project to someone else, and they can jump in and start working right away.\nThis means:\n\nFiles are organized and well-named.\nReferences to data and code work for everyone.\nPackage dependency is clear.\nCode will run the same every time, even if data values change.\nAnalysis process is well-explained and easy to read."
  },
  {
    "objectID": "videos/week-2/r-projects.html#good-practice",
    "href": "videos/week-2/r-projects.html#good-practice",
    "title": "R Projects",
    "section": "Good practice",
    "text": "Good practice\n\nOrganize your folders carefully, and name them meaningfully:\n\n/User/atheobold/Stat331/lab1/ rather than Desktop/stuff/\n\nUse R Projects liberally - put one in the “main” folder for each project"
  },
  {
    "objectID": "videos/week-2/r-projects.html#bad-practice",
    "href": "videos/week-2/r-projects.html#bad-practice",
    "title": "R Projects",
    "section": "Bad practice",
    "text": "Bad practice\nIf you put something like this at the top of your .qmd file, I will set your computer on fire:\n\nsetwd(\"/User/reginageorge/Desktop/R_Class/Lab_1/\")\n\n\nSetting working directory by hand = BAD!\nThat directory is specific to you!\nQuarto will ignore this code when rendering!"
  },
  {
    "objectID": "weeks/week-1-quarto.html",
    "href": "weeks/week-1-quarto.html",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "",
    "text": "The theme of this lesson is good management of your files and data. In part two of this week’s coursework you will learn how to identify folders and paths, and create Quarto documents.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-quarto.html#file-management",
    "href": "weeks/week-1-quarto.html#file-management",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "1.1 File Management",
    "text": "1.1 File Management\nAs boring as it sounds, file management is arguably one of the most important skills a data scientist should have. The reproducibility of a project depends just as much on the way in which the project was stored as the computing tools used. While using R and Quarto make an important step in creating a reproducible analysis, there are other pieces that are arguably just as important—such as file management.\nBelieve it or not, your computer has multiple locations** where files can be stored. There has been a bit of a generational shift as computers have evolved: the “file system” metaphor itself is outdated because no one uses physical files anymore. [This article]((https://futurism.com/the-byte/gen-z-kids-file-systems) makes the argument that with modern search capabilities, most people use their computers as a laundry hamper instead of as a nice, organized filing cabinet. However, the laundry hamper approach doesn’t play nicely with working in R and creating Quarto documents.\nIn this class, we will store files according to the Project TIER protocol. More specifically, you will have:\n\na “Stat 331” folder in your Documents folder, containing all your materials associated with STAT 331\na sub-folder for each week (e.g., Week 1, Week 2)\nseparate folders within each week for each assignment (e.g., Practice Activity, Lab)\na separate R Studio Project (and GitHub repository) associated with each assignment\n\nFor example, if you come to my office for help on your lab assignment for Week 2, I would expect your files to look like this:\n\nFile Storage on WindowsFile Storage on a Mac\n\n\n\nI have six total folders in my Documents, one of which is a folder named “STAT 331.”\n\nInside my STAT 331 folder is a sub-folder named “Week 1,” which also has a sub-folder (a sub-sub-folder) named “Lab 1.” You can tell what folders Lab 1 lives inside based on the information included at the top of the screen. This is called a “file path,” which tells your computer where a folder / file lives on the computer.\nOn a PC, every file lives on the C Drive, so the “full path” to get to my Lab 1 folder would be:\nC:/Users/atheobold/Documents/STAT 331/Week 1/Lab 1\n\n\n\nI have six total folders in my Documents, one of which is a folder named “STAT 331.” Inside this folder is a sub-folder named “Week 1,” which also has a sub-folder (a sub-sub-folder) named “Lab 1.”\nOn a Mac, every file lives on the hard drive (it doesn’t have letters like a PC), so the “full path” to get to my Lab 1 folder would be:\n/Users/atheobold/Documents/STAT 331/Week 1/Lab 1",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-quarto.html#check-in-stat-331-folder",
    "href": "weeks/week-1-quarto.html#check-in-stat-331-folder",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "1.2 ✅ Check-in: Stat 331 Folder",
    "text": "1.2 ✅ Check-in: Stat 331 Folder\nTake a screenshot of your class directory, showing:\n\nthe location of your Stat 331 folder\na Week 1 sub-folder\na Lab 1 sub-sub-folder (inside the Week 1 folder)\n\n\n\n\n\n\n\nYour folder cannot synch with anything online!\n\n\n\nYour STAT 331 folder cannot be in a folder stored on OneDrive or iCloud! Storing your folder in this location will cause your code to periodically not run and I cannot help you fix it.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-quarto.html#downloading-quarto",
    "href": "weeks/week-1-quarto.html#downloading-quarto",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "2.1 Downloading Quarto",
    "text": "2.1 Downloading Quarto\nThe software associated with Quarto is automatically downloaded with the newest versions of RStudio. So, if you are using the most up to date version of RStudio (as instructed in Part 1 of this week’s coursework), you should already have Quarto installed on your computer. But, let’s test it out.\nTo ensure you have Quarto installed, carry out the following process:\n\nOpen RStudio\nClick on “File” (in the upper navigation bar)\nSelect “New File” (in the dropdown options)\nSelect “Quarto Document…” (in the dropdown option)\n\n \nIf you have Quarto installed, you should be prompted with the following menu:\n\nIf, instead, you receive a message saying Quarto is not installed on your computer, you need to download Quarto: https://quarto.org/docs/download/",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-quarto.html#introduction-to-quarto",
    "href": "weeks/week-1-quarto.html#introduction-to-quarto",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "2.2 Introduction to Quarto",
    "text": "2.2 Introduction to Quarto\n\n📖 Required Reading: Intro to Quarto\n\n\nHTML Documents\nWe will exclusively use HTML documents in this course. If you are interested in learning more about formatting options for Quarto HTML documents, I would recommend checking out:\n\na discussion of the basics of formatting HTML documents in Quarto\nthe list of all HTML Ffrmatting pptions for Quarto documents",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-quarto.html#check-in-quarto-documents",
    "href": "weeks/week-1-quarto.html#check-in-quarto-documents",
    "title": "Week 1, Part 2: Reproducible Analyses with Quarto",
    "section": "2.3 ✅ Check-in: Quarto Documents",
    "text": "2.3 ✅ Check-in: Quarto Documents\nQuestion 1: What are the options at the top of a Quarto document (between the --- and --- symbols) called?\n\nXML\nYAML\nREML\nTOML\n\nQuestion 2: What symbols create an R code chunk?\n\n```\n{r}\n```{r}\n`{r}`\n\nQuestion 3: What symbol defines a heading?\n\n$\n_\n*\n#\n\nQuestion 4: When working in a Quarto document, the [visual / source] editor will display the raw Quarto document, whereas the [visual / source] will display the document as it will appear when it is rendered.\nQuestion 5: To produce an HTML report from your Quarto document, you need to click the ____ button.\n\nVisual\nRender\nRender on Save\nSave",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-1-version-control.html#objectives",
    "href": "weeks/week-1-version-control.html#objectives",
    "title": "Week 1, Part 3: Version Control with Git and GitHub",
    "section": "0.1 Objectives",
    "text": "0.1 Objectives\nMost of this section is either heavily inspired by Happy Git and Github for the UseR (Bryan, Hester, and The Stat 545 TAs 2021) or directly links to that book.\n\nRecognize the benefits of using version control to improve your coding practices and workflow.\nIdentify git / GitHub as a version control platform (and helper).\nInstall git onto your computer and register for a GitHub account\nStart applying version control practices to your workflow.",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 3"
    ]
  },
  {
    "objectID": "weeks/week-1-version-control.html#footnotes",
    "href": "weeks/week-1-version-control.html#footnotes",
    "title": "Week 1, Part 3: Version Control with Git and GitHub",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYes, I’m aware that this sounds paranoid. It’s been a very rare occasion that I’ve needed to restore something from another backup. You don’t want to take chances.↩︎",
    "crumbs": [
      "Weekly materials",
      "Week 1, Part 3"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html",
    "href": "weeks/week-2-projects-data-import.html",
    "title": "R Projects & Reading Data",
    "section": "",
    "text": "Describe what an R Project is\nOutline how an R Project affects the file paths used to read in data\n\nRead in data from common formats into R",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#learning-objectives",
    "href": "weeks/week-2-projects-data-import.html#learning-objectives",
    "title": "R Projects & Reading Data",
    "section": "",
    "text": "Describe what an R Project is\nOutline how an R Project affects the file paths used to read in data\n\nRead in data from common formats into R",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#working-directories-in-r",
    "href": "weeks/week-2-projects-data-import.html#working-directories-in-r",
    "title": "R Projects & Reading Data",
    "section": "1.1 Working Directories in R",
    "text": "1.1 Working Directories in R\nTo find where your working directory is in R, you can either look at the top of your console or type getwd() into your console.\n\ngetwd()\n\nAlthough it is not recommended, you can set your working directory in R with setwd():\n\nsetwd(\"/path/to/my/assignment/folder\")\n\n\n\n\n\n\n\nFile Paths in R\n\n\n\nA quick warning on file paths is that Mac / Linux and Windows differ in the direction of their backslash to separate folder locations. Mac/Linux use / (e.g. STAT331/Week1) while Window’s uses \\ (e.g. STAT331\\Week1).",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#r-projects",
    "href": "weeks/week-2-projects-data-import.html#r-projects",
    "title": "R Projects & Reading Data",
    "section": "1.2 R Projects",
    "text": "1.2 R Projects",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#required-reading-workflow-r-projects",
    "href": "weeks/week-2-projects-data-import.html#required-reading-workflow-r-projects",
    "title": "R Projects & Reading Data",
    "section": "1.3 📖 Required Reading: Workflow (R Projects)",
    "text": "1.3 📖 Required Reading: Workflow (R Projects)\n\n\n\n\n\n\nOnly read Section 6.2!\n\n\n\n\n\n\nIf you open up your folder from Lab 1, you will notice that you have a blue cube (an R Project) living in this folder! The R Project lives in this folder for two reasons, (1) when you copied the Lab 1 GitHub repository you told RStudio you wanted to make a new R Project, and (2) in order for RStudio to talk with GitHub you need to use an R Project.\nHowever, if you look at your STAT331 folder (the one that lives in your Documents folder), you should not see a blue cube since we never created an R Project in this folder. Let’s do that now!\nTo add a R Project to an existing folder on your computer (e.g., you already created a folder for this class), first open RStudio on your computer and click File &gt; New Project, then:\n\n\n\nNavigation prompt for creating a new R Project in an existing directory\n\n\nThen, browse on your computer to where you saved your STAT331 folder last week. This should be in your Documents folder, similar to where mine is saved!\n\n\n\nNavigation prompt for selecting which existing folder in which the R Project should be created.\n\n\nOnce you click “Create Project”, your existing folder, STAT331 should now contain a STAT331.Rproj file. This is your new “home” base for this class - whenever you refer to a file with a relative path it will begin to look for it here.",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#check-in-2.2-rstudio-projects",
    "href": "weeks/week-2-projects-data-import.html#check-in-2.2-rstudio-projects",
    "title": "R Projects & Reading Data",
    "section": "1.4 ✅ Check-in 2.2: RStudio Projects",
    "text": "1.4 ✅ Check-in 2.2: RStudio Projects\nTake a screenshot of your class directory, showing the R Project living inside your STAT331 folder.",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#where-does-my-data-live",
    "href": "weeks/week-2-projects-data-import.html#where-does-my-data-live",
    "title": "R Projects & Reading Data",
    "section": "2.1 Where does my data live?",
    "text": "2.1 Where does my data live?\n\n▶️ Required Video: Data Locations and the {here} package (8 minutes)",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#how-do-i-load-my-data",
    "href": "weeks/week-2-projects-data-import.html#how-do-i-load-my-data",
    "title": "R Projects & Reading Data",
    "section": "2.2 How do I load my data?",
    "text": "2.2 How do I load my data?\n📖 Required Reading: Data Import",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  },
  {
    "objectID": "weeks/week-2-projects-data-import.html#check-in-2.3-loading-data",
    "href": "weeks/week-2-projects-data-import.html#check-in-2.3-loading-data",
    "title": "R Projects & Reading Data",
    "section": "2.3 ✅ Check-in 2.3: Loading Data",
    "text": "2.3 ✅ Check-in 2.3: Loading Data\nFor this check-in you are asked to work through reading in different data sets. You can download the Quarto template for your investigation here: data-import-practice.qmd\n\nThe folder Age_Data contains several data sets with the names and ages of five individuals. The data sets are stored as different file types. Download Ages_data.zip here, make sure to unzip the folder, save these in a reasonable place (e.g., STAT331 &gt; Week 2 &gt; Checkin or STAT331 &gt; Checkins &gt; Week 2).\n\n\n\n\n\n\nExtracting zip folders\n\n\n\nYou will need to extract the contents of the ages.zip file, that means you will need to uncompress the files from the folder for RStudio to know where to get the data from.\n\n\nOnce you have the data saved (and extracted) in your STAT 331 folder, use the readr and readxl packages to complete the following and fill in the “gap” code in the Canvas quiz:\n\nLoad the appropriate packages for reading in data.\nRead in the data set ages.csv\nRead in the data set ages_tab.txt\nRead in the data set ages_mystery.txt\nRead in the data set ages.xlsx\nFind a way to use read_csv() to read ages.csv with the variable “Name” as a factor data type and “Age” as a character data type.",
    "crumbs": [
      "Weekly materials",
      "Week 2, Part 2"
    ]
  }
]