---
title: "PA 5.1: Scrambled Message"
author: "The names of your group members go here!"
format: html
embed-resources: true
code-tools: true
toc: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r}
#| label: setup

library(tidyverse)
```

## Read in the Secret Message

```{r}
#| label: read-in-secret-message-data
#| message: false

message_data <- read_csv("https://github.com/earobinson95/stat331-calpoly/raw/master/practice-activities/data/scrambled_message.txt")
```

## Working with the Secret Message Data

If you preview the data, you'll notice this is a **very** simple data frame with
only one column---`Word`. This column contains strings (or words). 

*In this activity, when I say "word" I mean a set of characters with no white space. That is, even though many of elements of the scrambled mess vector are nonsense, and some have punctuation, you can consider each element to be a "word".*

```{r}
message_data
```

Since the `Word` is stored in a data frame, you will need to use some of the 
**dplyr** functions you have learned to work with the data. 

For example, if you need to find words that have a certain pattern, then you
will likely want to pair a `str_XXXX()` function with **`filter()`**. 

If you need to make changes to the words, then you will likely want 
to pair a `str_XXXX()` function with **`mutate()`**. 

If you want to summarize patterns in the words, then you will likely want 
to pair a `str_XXXX()` function with **`summarize()`**. 


## Warm-up Exercises

<!-- The person who has the most pets starts as the Developer (typing and
listening to instructions from the Coder)!  -->

1.  Print out every word in the scrambled message that starts with the letter "m".
*Hint: What symbol do you use to indicate the beginning of a string?*

```{r}
#| label: words-starting-with-m

```

2.  Print out every word in the scrambled message that ends with the letter "z".
*Hint: What symbol do you use to indicate the end of a string?*

```{r}
#| label: words-ending-with-z

```

3.  Print out the punctuation symbols that are present in the scrambled message.
*Hint: You don't need to type out every punctuation symbol! There is a shortcut way to look for any punctuation symbol.*

```{r}
#| label: find-punctuation

```

<!-- Switch roles! Talker becomes Typer, Typer becomes Talker. -->

5.  Print out the words that have more than 16 characters.
*Hint: This should take two steps!*

```{r}
#| label: count-characters

```

6.  Print out the longest word in the scrambled message.
*Hint: If you already have the length of each word, you can grab the max easily!*

```{r}
#| label: longest-word

```


## Decode the Message

<!-- Switch roles! Talker becomes Typer, Typer becomes Talker. -->

Complete the following steps to decode the message.

1.  Remove any spaces before or after each word.

```{r}
#| label: remove-spaces
 
```

2.  No word should be longer than 16 characters. Drop all extra characters off the end of each word.

```{r}
#| label: truncate-strings-to-16-characters
 
```

3.  Any time you see the word "ugh", with any number of h's, followed by a punctuation mark, delete this.

```{r}
#| label: delete-ughs
 
```

4.  Replace all instances of exactly 2 a's with exactly 2 e's.

```{r}
#| label: replace-two-as-with-two-es
 
```

<!-- Switch roles! Coder becomes Developer, Developer becomes Coder. -->

5.  Replace all z's with t's.

```{r}
#| label: replace-zs-with-ts
 
```

6.  Every word that ends in b, change that to a y.

```{r}
#| label: change-b-ending-to-y
 
```

7.  Every word that starts with k (or K), change that to a v (or V).

```{r}
#| label: change-kK-start-to-a-vV
 
```

8.  Recombine all your words into a message.

```{r}
#| label: combine-words-back-into-a-message
 
```

9.  Find the movie this quote is from.

### Canvas Quiz Submission

What is the name of the movie the quote is from?
