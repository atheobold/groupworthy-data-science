# R Basics

## Data Types

-   A **value** is a basic unit of stuff that a program works with.

-   Values are allowed to have different *data types*:

. . .

1.  **logical / boolean**: FALSE / TRUE or 0 / 1 values.

. . .

2.  **integer**: whole numbers.

. . .

3.  **double / float / numeric**: decimal numbers.

. . .

4.  **character / string** - text values.

## Variables

> are names that refer to values.

::: incremental
::: small
-   A variable is like a container that holds something - when you refer to the container, you get whatever is stored inside.

-   We assign values to variables using the syntax `object_name <- value`.

    -   This can be read as “object name gets value.”
:::
:::

. . .

```{r}
#| echo: true
#| label: example-object-creation
#| code-line-numbers: false

message <- "So long and thanks for all the fish"
year <- 2025
the_answer <- 42.5
earth_demolished <- FALSE
```

## Data Structures

::: panel-tabset
## Homogeneous

> every element has the same data type

-   **Vector**: a one-dimensional column of homogeneous data.

-   **Matrix**: the next step after a vector - it’s a set of homogenous data arranged in a two-dimensional, rectangular format.

## Heterogeneous

> elements can be of different types

-   **List**: a one-dimensional column of heterogeneous data.

-   **Dataframe**: a two-dimensional set of heterogeneous data arranged in a rectangular format.

:::



## Indexing

We use **square brackets** (`[]`) to access elements within data structures.

-   In R, we start indexing from 1.

::: {.panel-tabset}

## Vector

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
#| label: vector-elements

vec[4]    # 4th element
vec[1:3]  # first 3 elements
```

## Matrix

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
#| label: matrix-elements

mat[2, 6]  # element in row 2, col 6
mat[ , 3]   # all elements in col 3
```

## List

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
#| label: list-elements

li[[5]]    # 5th element
li$elementName # all elements in "elementName"
```


## Dataframe

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
#| label: df-elements

df[1, 2]     # element in row 1, col 2
df[17, ]     # all elements in row 17
df$colName  # all elements in the col named "colName"
```

:::

## Logic

We can combine logical statements using and, or, and not.

-   (X AND Y) requires that **both** X and Y are true.

-   (X OR Y) requires that **one** of X or Y is true.

-   (NOT X) is true if X is false, and false if X is true.

. . .

```{r}
#| echo: true
#| label: logic-test
#| code-line-numbers: false

x <- c(TRUE, FALSE, TRUE, FALSE)
y <- c(TRUE, TRUE, FALSE, FALSE)
```

::: {.panel-tabset}
## And

```{r}
#| echo: true
#| label: and
x & y
```

## Or 

```{r}
#| echo: true
#| label: or
x | y
```

## Not 
```{r}
#| echo: true
#| label: not

!x
```
:::
