---
title: "R Projects"
format: revealjs
---


## The Beauty of R Projects

+ An **R Project** is basically a "flag" planted in a certain directory.

+ When you double click an **.Rproj** file, it:

:::: {.columns}

::: {.column width="50%"}

1. Opens RStudio

2. Sets the working directory to be wherever the .Rproj file lives.

3. Links to GitHub, if set up (more on that later!)
:::

::: {.column width="50%"}
```{r, out.width = "70%", fig.align='center', echo = F}
knitr::include_graphics("images/project_flag.jpg")
```
:::

::::


## RStudio Projects & Reproducibility

RStudio Projects are great for **reproducibility**!

+ You can send anyone your folder with your .Rproj file and they will be able to run your code on their computer.

+ We will be using RStudio Projects throughout this course.


## Principles of Reproducibility

You can to send your project to someone else, and they can
jump in and start working right away.

+ This means:

  1. Files are organized and well-named.

  2. References to data and code work for everyone.

  3. Package dependency is clear.

  4. Code will run the same every time, even if data values change.

  5. Analysis process is well-explained and easy to read.


# [Setting up an RStudio Project](https://earobinson95.github.io/stat331-calpoly-text/01-introduction.html#rprojects)


## Good practice

- Organize your folders carefully, and name them meaningfully:
  * `/User/zrehnber/Stat331/lab1/` rather than `Desktop/stuff/`
    
- Use **R Projects** liberally - put one in the "main" folder for each project


## Bad practice

If you put something like this at the top of your .qmd file (more on Quarto later), I will set your 
computer on fire:

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: false
setwd("/User/reginageorge/Desktop/R_Class/Lab_1/")
```

- Setting working directory by hand = BAD!  

- That directory is specific to you!

- R Markdown and Quarto (more on these later) ignore this code when knitting! 
